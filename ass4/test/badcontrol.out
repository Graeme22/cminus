====================================
FILE: badcontrol.c-
ERROR(7): '=' requires operands of the same type but lhs is type int and rhs is type bool.
ERROR(8): '=' requires operands of the same type but lhs is type int and rhs is type bool.
ERROR(10): Expecting Boolean test condition in if statement but got type int.
ERROR(12): Expecting Boolean test condition in if statement but got type int.
ERROR(15): Expecting Boolean test condition in if statement but got type int.
ERROR(15): Expecting Boolean test condition in if statement but got type int.
ERROR(18): Expecting Boolean test condition in if statement but got type int.
ERROR(19): Expecting Boolean test condition in if statement but got type int.
ERROR(20): Expecting Boolean test condition in if statement but got type int.
ERROR(21): Expecting Boolean test condition in if statement but got type int.
ERROR(22): Expecting Boolean test condition in if statement but got type int.
ERROR(24): Expecting Boolean test condition in while statement but got type int.
ERROR(26): Cannot use function 'nothin' as a variable.
ERROR(34): Expecting Boolean test condition in while statement but got type int.
ERROR(37): Expecting Boolean test condition in while statement but got type int.
ERROR(45): Cannot have a break statement outside of loop.
Func nothin: returns type void [line: 2]
Sibling: 1  Func main: returns type void [line: 4]
.   Child: 1  Compound [line: 4]
.   .   Child: 0  Var x: type int [line: 5]
.   .   Sibling: 1  Var y: type int [line: 5]
.   .   Child: 1  Assign = : type int [line: 7]
.   .   .   Child: 0  Id x: type int [line: 7]
.   .   .   Child: 1  Const true : type bool [line: 7]
.   .   Sibling: 1  Assign = : type int [line: 8]
.   .   .   Child: 0  Id y: type int [line: 8]
.   .   .   Child: 1  Const false : type bool [line: 8]
.   .   Sibling: 2  If [line: 10]
.   .   .   Child: 0  Id x: type int [line: 10]
.   .   .   Child: 1  Const 111 : type int [line: 10]
.   .   Sibling: 3  If [line: 12]
.   .   .   Child: 0  Id y: type int [line: 12]
.   .   .   Child: 1  Const 222 : type int [line: 12]
.   .   .   Child: 2  Const 333 : type int [line: 13]
.   .   Sibling: 4  If [line: 15]
.   .   .   Child: 0  Id x: type int [line: 15]
.   .   .   Child: 1  If [line: 15]
.   .   .   .   Child: 0  Id y: type int [line: 15]
.   .   .   .   Child: 1  Const 444 : type int [line: 15]
.   .   .   .   Child: 2  Const 555 : type int [line: 16]
.   .   Sibling: 5  If [line: 18]
.   .   .   Child: 0  Id x: type int [line: 18]
.   .   .   Child: 1  If [line: 19]
.   .   .   .   Child: 0  Id y: type int [line: 19]
.   .   .   .   Child: 1  Const 444 : type int [line: 19]
.   .   .   .   Child: 2  If [line: 20]
.   .   .   .   .   Child: 0  Const 555 : type int [line: 20]
.   .   .   .   .   Child: 1  Const 556 : type int [line: 20]
.   .   .   .   .   Child: 2  If [line: 21]
.   .   .   .   .   .   Child: 0  Id x: type int [line: 21]
.   .   .   .   .   .   Child: 1  Const 557 : type int [line: 21]
.   .   .   .   .   .   Child: 2  If [line: 22]
.   .   .   .   .   .   .   Child: 0  Const 559 : type int [line: 22]
.   .   .   .   .   .   .   Child: 1  Id x: type int [line: 22]
.   .   Sibling: 6  While [line: 24]
.   .   .   Child: 0  Id x: type int [line: 24]
.   .   .   Child: 1  Const 666 : type int [line: 24]
.   .   Sibling: 7  While [line: 26]
.   .   .   Child: 0  Id nothin: undefined type [line: 26]
.   .   .   Child: 1  Compound [line: 26]
.   .   .   .   Child: 1  Const 777 : type int [line: 27]
.   .   .   .   Sibling: 1  Break [line: 28]
.   .   .   .   Sibling: 2  Const 888 : type int [line: 29]
.   .   .   .   Sibling: 3  Break [line: 30]
.   .   .   .   Sibling: 4  Const 999 : type int [line: 31]
.   .   Sibling: 8  While [line: 34]
.   .   .   Child: 0  Id x: type int [line: 34]
.   .   .   Child: 1  Compound [line: 34]
.   .   .   .   Child: 1  Const 111 : type int [line: 35]
.   .   .   .   Sibling: 1  Break [line: 36]
.   .   .   .   Sibling: 2  While [line: 37]
.   .   .   .   .   Child: 0  Id y: type int [line: 37]
.   .   .   .   .   Child: 1  Compound [line: 37]
.   .   .   .   .   .   Child: 1  Const 222 : type int [line: 38]
.   .   .   .   .   .   Sibling: 1  Break [line: 39]
.   .   .   .   .   .   Sibling: 2  Const 333 : type int [line: 40]
.   .   .   .   Sibling: 3  Break [line: 42]
.   .   .   .   Sibling: 4  Const 444 : type int [line: 43]
.   .   Sibling: 9  Break [line: 45]
Number of warnings: 0
Number of errors: 16
