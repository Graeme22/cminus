====================================
FILE: tinyExp.c-
ERROR(8): Function 'output' is not declared.
ERROR(9): Function 'output' is not declared.
ERROR(10): Function 'output' is not declared.
ERROR(11): Function 'outnl' is not declared.
ERROR(12): Function 'output' is not declared.
ERROR(13): Function 'output' is not declared.
ERROR(14): Function 'outnl' is not declared.
ERROR(15): Function 'output' is not declared.
ERROR(16): Function 'output' is not declared.
ERROR(17): Function 'outnl' is not declared.
ERROR(18): Function 'output' is not declared.
ERROR(19): Function 'output' is not declared.
ERROR(20): Function 'output' is not declared.
ERROR(21): Function 'outnl' is not declared.
ERROR(22): Function 'outputb' is not declared.
ERROR(23): Function 'outputb' is not declared.
ERROR(24): Function 'outnl' is not declared.
ERROR(25): Function 'outputb' is not declared.
ERROR(26): Function 'outputb' is not declared.
ERROR(27): Function 'outnl' is not declared.
ERROR(28): Function 'outputb' is not declared.
ERROR(29): Function 'outputb' is not declared.
ERROR(30): Function 'outnl' is not declared.
ERROR(31): Function 'outputb' is not declared.
ERROR(32): Function 'outnl' is not declared.
Func ident: returns type int [line: 2]
.   Child: 0  Param x: type int [line: 2]
.   Child: 1  Return [line: 2]
.   .   Child: 0  Id x: type int [line: 2]
Sibling: 1  Func main: returns type void [line: 4]
.   Child: 1  Compound [line: 5]
.   .   Child: 0  Var x: type bool [line: 6]
.   .   Child: 1  Call output: undefined type [line: 8]
.   .   .   Child: 0  Call ident: type int [line: 8]
.   .   .   .   Child: 0  Const 111 : type int [line: 8]
.   .   Sibling: 1  Call output: undefined type [line: 9]
.   .   .   Child: 0  Op * : type int [line: 9]
.   .   .   .   Child: 0  Call ident: type int [line: 9]
.   .   .   .   .   Child: 0  Const 111 : type int [line: 9]
.   .   .   .   Child: 1  Const 222 : type int [line: 9]
.   .   Sibling: 2  Call output: undefined type [line: 10]
.   .   .   Child: 0  Op * : type int [line: 10]
.   .   .   .   Child: 0  Const 222 : type int [line: 10]
.   .   .   .   Child: 1  Call ident: type int [line: 10]
.   .   .   .   .   Child: 0  Const 111 : type int [line: 10]
.   .   Sibling: 3  Call outnl: undefined type [line: 11]
.   .   Sibling: 4  Call output: undefined type [line: 12]
.   .   .   Child: 0  Op + : type int [line: 12]
.   .   .   .   Child: 0  Op * : type int [line: 12]
.   .   .   .   .   Child: 0  Call ident: type int [line: 12]
.   .   .   .   .   .   Child: 0  Const 111 : type int [line: 12]
.   .   .   .   .   Child: 1  Const 222 : type int [line: 12]
.   .   .   .   Child: 1  Const 333 : type int [line: 12]
.   .   Sibling: 5  Call output: undefined type [line: 13]
.   .   .   Child: 0  Op * : type int [line: 13]
.   .   .   .   Child: 0  Op + : type int [line: 13]
.   .   .   .   .   Child: 0  Call ident: type int [line: 13]
.   .   .   .   .   .   Child: 0  Const 111 : type int [line: 13]
.   .   .   .   .   Child: 1  Const 222 : type int [line: 13]
.   .   .   .   Child: 1  Const 333 : type int [line: 13]
.   .   Sibling: 6  Call outnl: undefined type [line: 14]
.   .   Sibling: 7  Call output: undefined type [line: 15]
.   .   .   Child: 0  Op - : type int [line: 15]
.   .   .   .   Child: 0  Op + : type int [line: 15]
.   .   .   .   .   Child: 0  Call ident: type int [line: 15]
.   .   .   .   .   .   Child: 0  Const 111 : type int [line: 15]
.   .   .   .   .   Child: 1  Const 222 : type int [line: 15]
.   .   Sibling: 8  Call output: undefined type [line: 16]
.   .   .   Child: 0  Op - : type int [line: 16]
.   .   .   .   Child: 0  Op - : type int [line: 16]
.   .   .   .   .   Child: 0  Op + : type int [line: 16]
.   .   .   .   .   .   Child: 0  Call ident: type int [line: 16]
.   .   .   .   .   .   .   Child: 0  Const 111 : type int [line: 16]
.   .   .   .   .   .   Child: 1  Const 222 : type int [line: 16]
.   .   Sibling: 9  Call outnl: undefined type [line: 17]
.   .   Sibling: 10  Call output: undefined type [line: 18]
.   .   .   Child: 0  Op * : type int [line: 18]
.   .   .   .   Child: 0  Op - : type int [line: 18]
.   .   .   .   .   Child: 0  Op - : type int [line: 18]
.   .   .   .   .   .   Child: 0  Op + : type int [line: 18]
.   .   .   .   .   .   .   Child: 0  Call ident: type int [line: 18]
.   .   .   .   .   .   .   .   Child: 0  Const 111 : type int [line: 18]
.   .   .   .   .   .   .   Child: 1  Const 222 : type int [line: 18]
.   .   .   .   Child: 1  Const 333 : type int [line: 18]
.   .   Sibling: 11  Call output: undefined type [line: 19]
.   .   .   Child: 0  Op / : type int [line: 19]
.   .   .   .   Child: 0  Op * : type int [line: 19]
.   .   .   .   .   Child: 0  Op - : type int [line: 19]
.   .   .   .   .   .   Child: 0  Op - : type int [line: 19]
.   .   .   .   .   .   .   Child: 0  Op + : type int [line: 19]
.   .   .   .   .   .   .   .   Child: 0  Call ident: type int [line: 19]
.   .   .   .   .   .   .   .   .   Child: 0  Const 111 : type int [line: 19]
.   .   .   .   .   .   .   .   Child: 1  Const 222 : type int [line: 19]
.   .   .   .   .   Child: 1  Const 333 : type int [line: 19]
.   .   .   .   Child: 1  Const 444 : type int [line: 19]
.   .   Sibling: 12  Call output: undefined type [line: 20]
.   .   .   Child: 0  Op % : type int [line: 20]
.   .   .   .   Child: 0  Op / : type int [line: 20]
.   .   .   .   .   Child: 0  Op * : type int [line: 20]
.   .   .   .   .   .   Child: 0  Op - : type int [line: 20]
.   .   .   .   .   .   .   Child: 0  Op - : type int [line: 20]
.   .   .   .   .   .   .   .   Child: 0  Op + : type int [line: 20]
.   .   .   .   .   .   .   .   .   Child: 0  Call ident: type int [line: 20]
.   .   .   .   .   .   .   .   .   .   Child: 0  Const 111 : type int [line: 20]
.   .   .   .   .   .   .   .   .   Child: 1  Const 222 : type int [line: 20]
.   .   .   .   .   .   Child: 1  Const 333 : type int [line: 20]
.   .   .   .   .   Child: 1  Const 444 : type int [line: 20]
.   .   .   .   Child: 1  Const 42 : type int [line: 20]
.   .   Sibling: 13  Call outnl: undefined type [line: 21]
.   .   Sibling: 14  Call outputb: undefined type [line: 22]
.   .   .   Child: 0  Op <= : type bool [line: 22]
.   .   .   .   Child: 0  Op + : type int [line: 22]
.   .   .   .   .   Child: 0  Op % : type int [line: 22]
.   .   .   .   .   .   Child: 0  Op / : type int [line: 22]
.   .   .   .   .   .   .   Child: 0  Op * : type int [line: 22]
.   .   .   .   .   .   .   .   Child: 0  Op - : type int [line: 22]
.   .   .   .   .   .   .   .   .   Child: 0  Op - : type int [line: 22]
.   .   .   .   .   .   .   .   .   .   Child: 0  Op + : type int [line: 22]
.   .   .   .   .   .   .   .   .   .   .   Child: 0  Call ident: type int [line: 22]
.   .   .   .   .   .   .   .   .   .   .   .   Child: 0  Const 111 : type int [line: 22]
.   .   .   .   .   .   .   .   .   .   .   Child: 1  Const 222 : type int [line: 22]
.   .   .   .   .   .   .   .   Child: 1  Const 333 : type int [line: 22]
.   .   .   .   .   .   .   Child: 1  Const 444 : type int [line: 22]
.   .   .   .   .   .   Child: 1  Const 42 : type int [line: 22]
.   .   .   .   .   Child: 1  Const 555 : type int [line: 22]
.   .   .   .   Child: 1  Const 666 : type int [line: 22]
.   .   Sibling: 15  Call outputb: undefined type [line: 23]
.   .   .   Child: 0  Op >= : type bool [line: 23]
.   .   .   .   Child: 0  Op + : type int [line: 23]
.   .   .   .   .   Child: 0  Op % : type int [line: 23]
.   .   .   .   .   .   Child: 0  Op / : type int [line: 23]
.   .   .   .   .   .   .   Child: 0  Op * : type int [line: 23]
.   .   .   .   .   .   .   .   Child: 0  Op - : type int [line: 23]
.   .   .   .   .   .   .   .   .   Child: 0  Op - : type int [line: 23]
.   .   .   .   .   .   .   .   .   .   Child: 0  Op + : type int [line: 23]
.   .   .   .   .   .   .   .   .   .   .   Child: 0  Call ident: type int [line: 23]
.   .   .   .   .   .   .   .   .   .   .   .   Child: 0  Const 111 : type int [line: 23]
.   .   .   .   .   .   .   .   .   .   .   Child: 1  Const 222 : type int [line: 23]
.   .   .   .   .   .   .   .   Child: 1  Const 333 : type int [line: 23]
.   .   .   .   .   .   .   Child: 1  Const 444 : type int [line: 23]
.   .   .   .   .   .   Child: 1  Const 42 : type int [line: 23]
.   .   .   .   .   Child: 1  Const 555 : type int [line: 23]
.   .   .   .   Child: 1  Const 666 : type int [line: 23]
.   .   Sibling: 16  Call outnl: undefined type [line: 24]
.   .   Sibling: 17  Call outputb: undefined type [line: 25]
.   .   .   Child: 0  Op ! : type bool [line: 25]
.   .   .   .   Child: 0  Op <= : type bool [line: 25]
.   .   .   .   .   Child: 0  Op + : type int [line: 25]
.   .   .   .   .   .   Child: 0  Op % : type int [line: 25]
.   .   .   .   .   .   .   Child: 0  Op / : type int [line: 25]
.   .   .   .   .   .   .   .   Child: 0  Op * : type int [line: 25]
.   .   .   .   .   .   .   .   .   Child: 0  Op - : type int [line: 25]
.   .   .   .   .   .   .   .   .   .   Child: 0  Op - : type int [line: 25]
.   .   .   .   .   .   .   .   .   .   .   Child: 0  Op + : type int [line: 25]
.   .   .   .   .   .   .   .   .   .   .   .   Child: 0  Call ident: type int [line: 25]
.   .   .   .   .   .   .   .   .   .   .   .   .   Child: 0  Const 111 : type int [line: 25]
.   .   .   .   .   .   .   .   .   .   .   .   Child: 1  Const 222 : type int [line: 25]
.   .   .   .   .   .   .   .   .   Child: 1  Const 333 : type int [line: 25]
.   .   .   .   .   .   .   .   Child: 1  Const 444 : type int [line: 25]
.   .   .   .   .   .   .   Child: 1  Const 42 : type int [line: 25]
.   .   .   .   .   .   Child: 1  Const 555 : type int [line: 25]
.   .   .   .   .   Child: 1  Const 666 : type int [line: 25]
.   .   Sibling: 18  Call outputb: undefined type [line: 26]
.   .   .   Child: 0  Op ! : type bool [line: 26]
.   .   .   .   Child: 0  Op ! : type bool [line: 26]
.   .   .   .   .   Child: 0  Op <= : type bool [line: 26]
.   .   .   .   .   .   Child: 0  Op + : type int [line: 26]
.   .   .   .   .   .   .   Child: 0  Op % : type int [line: 26]
.   .   .   .   .   .   .   .   Child: 0  Op / : type int [line: 26]
.   .   .   .   .   .   .   .   .   Child: 0  Op * : type int [line: 26]
.   .   .   .   .   .   .   .   .   .   Child: 0  Op - : type int [line: 26]
.   .   .   .   .   .   .   .   .   .   .   Child: 0  Op - : type int [line: 26]
.   .   .   .   .   .   .   .   .   .   .   .   Child: 0  Op + : type int [line: 26]
.   .   .   .   .   .   .   .   .   .   .   .   .   Child: 0  Call ident: type int [line: 26]
.   .   .   .   .   .   .   .   .   .   .   .   .   .   Child: 0  Const 111 : type int [line: 26]
.   .   .   .   .   .   .   .   .   .   .   .   .   Child: 1  Const 222 : type int [line: 26]
.   .   .   .   .   .   .   .   .   .   Child: 1  Const 333 : type int [line: 26]
.   .   .   .   .   .   .   .   .   Child: 1  Const 444 : type int [line: 26]
.   .   .   .   .   .   .   .   Child: 1  Const 42 : type int [line: 26]
.   .   .   .   .   .   .   Child: 1  Const 555 : type int [line: 26]
.   .   .   .   .   .   Child: 1  Const 666 : type int [line: 26]
.   .   Sibling: 19  Call outnl: undefined type [line: 27]
.   .   Sibling: 20  Call outputb: undefined type [line: 28]
.   .   .   Child: 0  Op & : type bool [line: 28]
.   .   .   .   Child: 0  Op ! : type bool [line: 28]
.   .   .   .   .   Child: 0  Op ! : type bool [line: 28]
.   .   .   .   .   .   Child: 0  Op <= : type bool [line: 28]
.   .   .   .   .   .   .   Child: 0  Op + : type int [line: 28]
.   .   .   .   .   .   .   .   Child: 0  Op % : type int [line: 28]
.   .   .   .   .   .   .   .   .   Child: 0  Op / : type int [line: 28]
.   .   .   .   .   .   .   .   .   .   Child: 0  Op * : type int [line: 28]
.   .   .   .   .   .   .   .   .   .   .   Child: 0  Op - : type int [line: 28]
.   .   .   .   .   .   .   .   .   .   .   .   Child: 0  Op - : type int [line: 28]
.   .   .   .   .   .   .   .   .   .   .   .   .   Child: 0  Op + : type int [line: 28]
.   .   .   .   .   .   .   .   .   .   .   .   .   .   Child: 0  Call ident: type int [line: 28]
.   .   .   .   .   .   .   .   .   .   .   .   .   .   .   Child: 0  Const 111 : type int [line: 28]
.   .   .   .   .   .   .   .   .   .   .   .   .   .   Child: 1  Const 222 : type int [line: 28]
.   .   .   .   .   .   .   .   .   .   .   Child: 1  Const 333 : type int [line: 28]
.   .   .   .   .   .   .   .   .   .   Child: 1  Const 444 : type int [line: 28]
.   .   .   .   .   .   .   .   .   Child: 1  Const 42 : type int [line: 28]
.   .   .   .   .   .   .   .   Child: 1  Const 555 : type int [line: 28]
.   .   .   .   .   .   .   Child: 1  Const 666 : type int [line: 28]
.   .   .   .   Child: 1  Op < : type bool [line: 28]
.   .   .   .   .   Child: 0  Const 777 : type int [line: 28]
.   .   .   .   .   Child: 1  Const 888 : type int [line: 28]
.   .   Sibling: 21  Call outputb: undefined type [line: 29]
.   .   .   Child: 0  Op | : type bool [line: 29]
.   .   .   .   Child: 0  Op & : type bool [line: 29]
.   .   .   .   .   Child: 0  Op ! : type bool [line: 29]
.   .   .   .   .   .   Child: 0  Op ! : type bool [line: 29]
.   .   .   .   .   .   .   Child: 0  Op <= : type bool [line: 29]
.   .   .   .   .   .   .   .   Child: 0  Op + : type int [line: 29]
.   .   .   .   .   .   .   .   .   Child: 0  Op % : type int [line: 29]
.   .   .   .   .   .   .   .   .   .   Child: 0  Op / : type int [line: 29]
.   .   .   .   .   .   .   .   .   .   .   Child: 0  Op * : type int [line: 29]
.   .   .   .   .   .   .   .   .   .   .   .   Child: 0  Op - : type int [line: 29]
.   .   .   .   .   .   .   .   .   .   .   .   .   Child: 0  Op - : type int [line: 29]
.   .   .   .   .   .   .   .   .   .   .   .   .   .   Child: 0  Op + : type int [line: 29]
.   .   .   .   .   .   .   .   .   .   .   .   .   .   .   Child: 0  Call ident: type int [line: 29]
.   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   Child: 0  Const 111 : type int [line: 29]
.   .   .   .   .   .   .   .   .   .   .   .   .   .   .   Child: 1  Const 222 : type int [line: 29]
.   .   .   .   .   .   .   .   .   .   .   .   Child: 1  Const 333 : type int [line: 29]
.   .   .   .   .   .   .   .   .   .   .   Child: 1  Const 444 : type int [line: 29]
.   .   .   .   .   .   .   .   .   .   Child: 1  Const 42 : type int [line: 29]
.   .   .   .   .   .   .   .   .   Child: 1  Const 555 : type int [line: 29]
.   .   .   .   .   .   .   .   Child: 1  Const 666 : type int [line: 29]
.   .   .   .   .   Child: 1  Op < : type bool [line: 29]
.   .   .   .   .   .   Child: 0  Const 777 : type int [line: 29]
.   .   .   .   .   .   Child: 1  Const 888 : type int [line: 29]
.   .   .   .   Child: 1  Op != : type bool [line: 29]
.   .   .   .   .   Child: 0  Const 999 : type int [line: 29]
.   .   .   .   .   Child: 1  Const 1000 : type int [line: 29]
.   .   Sibling: 22  Call outnl: undefined type [line: 30]
.   .   Sibling: 23  Call outputb: undefined type [line: 31]
.   .   .   Child: 0  Assign = : type bool [line: 31]
.   .   .   .   Child: 0  Id x: type bool [line: 31]
.   .   .   .   Child: 1  Op | : type bool [line: 31]
.   .   .   .   .   Child: 0  Op & : type bool [line: 31]
.   .   .   .   .   .   Child: 0  Op ! : type bool [line: 31]
.   .   .   .   .   .   .   Child: 0  Op ! : type bool [line: 31]
.   .   .   .   .   .   .   .   Child: 0  Op <= : type bool [line: 31]
.   .   .   .   .   .   .   .   .   Child: 0  Op + : type int [line: 31]
.   .   .   .   .   .   .   .   .   .   Child: 0  Op % : type int [line: 31]
.   .   .   .   .   .   .   .   .   .   .   Child: 0  Op / : type int [line: 31]
.   .   .   .   .   .   .   .   .   .   .   .   Child: 0  Op * : type int [line: 31]
.   .   .   .   .   .   .   .   .   .   .   .   .   Child: 0  Op - : type int [line: 31]
.   .   .   .   .   .   .   .   .   .   .   .   .   .   Child: 0  Op - : type int [line: 31]
.   .   .   .   .   .   .   .   .   .   .   .   .   .   .   Child: 0  Op + : type int [line: 31]
.   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   Child: 0  Call ident: type int [line: 31]
.   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   Child: 0  Const 111 : type int [line: 31]
.   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   Child: 1  Const 222 : type int [line: 31]
.   .   .   .   .   .   .   .   .   .   .   .   .   Child: 1  Const 333 : type int [line: 31]
.   .   .   .   .   .   .   .   .   .   .   .   Child: 1  Const 444 : type int [line: 31]
.   .   .   .   .   .   .   .   .   .   .   Child: 1  Const 42 : type int [line: 31]
.   .   .   .   .   .   .   .   .   .   Child: 1  Const 555 : type int [line: 31]
.   .   .   .   .   .   .   .   .   Child: 1  Const 666 : type int [line: 31]
.   .   .   .   .   .   Child: 1  Op < : type bool [line: 31]
.   .   .   .   .   .   .   Child: 0  Const 777 : type int [line: 31]
.   .   .   .   .   .   .   Child: 1  Const 888 : type int [line: 31]
.   .   .   .   .   Child: 1  Op != : type bool [line: 31]
.   .   .   .   .   .   Child: 0  Const 999 : type int [line: 31]
.   .   .   .   .   .   Child: 1  Const 1000 : type int [line: 31]
.   .   Sibling: 24  Call outnl: undefined type [line: 32]
Number of warnings: 0
Number of errors: 25
