====================================
FILE: whileif.c-
ERROR(13): '=' requires operands of the same type but lhs is type bool and rhs is type int.
Func main: returns type int [line: 2]
.   Child: 1  Compound [line: 3]
.   .   Child: 0  Var x: type int [line: 4]
.   .   Sibling: 1  Var y: type int [line: 5]
.   .   Sibling: 2  Var z: type int [line: 6]
.   .   Sibling: 3  Var a: type bool [line: 7]
.   .   Sibling: 4  Var b: type bool [line: 7]
.   .   Sibling: 5  Var c: type bool [line: 7]
.   .   Sibling: 6  Var d: type bool [line: 7]
.   .   Sibling: 7  Var e: type bool [line: 7]
.   .   Child: 1  Assign = : type bool [line: 9]
.   .   .   Child: 0  Id b: type bool [line: 9]
.   .   .   Child: 1  Const false : type bool [line: 9]
.   .   Sibling: 1  While [line: 10]
.   .   .   Child: 0  Id b: type bool [line: 10]
.   .   .   Child: 1  Assign = : type int [line: 10]
.   .   .   .   Child: 0  Id x: type int [line: 10]
.   .   .   .   Child: 1  Const 88 : type int [line: 10]
.   .   Sibling: 2  If [line: 11]
.   .   .   Child: 0  Op > : type bool [line: 11]
.   .   .   .   Child: 0  Id x: type int [line: 11]
.   .   .   .   Child: 1  Const 2 : type int [line: 11]
.   .   Sibling: 3  Assign = : type bool [line: 13]
.   .   .   Child: 0  Id a: type bool [line: 13]
.   .   .   Child: 1  Assign = : type bool [line: 13]
.   .   .   .   Child: 0  Id b: type bool [line: 13]
.   .   .   .   Child: 1  Assign = : type bool [line: 13]
.   .   .   .   .   Child: 0  Id c: type bool [line: 13]
.   .   .   .   .   Child: 1  Assign = : type bool [line: 13]
.   .   .   .   .   .   Child: 0  Id d: type bool [line: 13]
.   .   .   .   .   .   Child: 1  Const 3 : type int [line: 13]
.   .   Sibling: 4  If [line: 14]
.   .   .   Child: 0  Const false : type bool [line: 14]
.   .   .   Child: 1  Assign = : type bool [line: 14]
.   .   .   .   Child: 0  Id e: type bool [line: 14]
.   .   .   .   Child: 1  Const true : type bool [line: 14]
.   .   Sibling: 5  Assign = : type int [line: 15]
.   .   .   Child: 0  Id x: type int [line: 15]
.   .   .   Child: 1  Const 1184 : type int [line: 15]
.   .   Sibling: 6  Assign = : type int [line: 16]
.   .   .   Child: 0  Id y: type int [line: 16]
.   .   .   Child: 1  Const 1210 : type int [line: 16]
.   .   Sibling: 7  If [line: 18]
.   .   .   Child: 0  Op > : type bool [line: 18]
.   .   .   .   Child: 0  Id x: type int [line: 18]
.   .   .   .   Child: 1  Const 1 : type int [line: 18]
.   .   .   Child: 1  Assign = : type int [line: 18]
.   .   .   .   Child: 0  Id z: type int [line: 18]
.   .   .   .   Child: 1  Const 1 : type int [line: 18]
.   .   Sibling: 8  If [line: 19]
.   .   .   Child: 0  Op > : type bool [line: 19]
.   .   .   .   Child: 0  Id x: type int [line: 19]
.   .   .   .   Child: 1  Const 2 : type int [line: 19]
.   .   .   Child: 1  Assign = : type int [line: 19]
.   .   .   .   Child: 0  Id z: type int [line: 19]
.   .   .   .   Child: 1  Const 1 : type int [line: 19]
.   .   .   Child: 2  Assign = : type int [line: 19]
.   .   .   .   Child: 0  Id z: type int [line: 19]
.   .   .   .   Child: 1  Const 2 : type int [line: 19]
.   .   Sibling: 9  If [line: 20]
.   .   .   Child: 0  Op > : type bool [line: 20]
.   .   .   .   Child: 0  Id x: type int [line: 20]
.   .   .   .   Child: 1  Const 3 : type int [line: 20]
.   .   .   Child: 1  If [line: 20]
.   .   .   .   Child: 0  Op > : type bool [line: 20]
.   .   .   .   .   Child: 0  Id y: type int [line: 20]
.   .   .   .   .   Child: 1  Const 4 : type int [line: 20]
.   .   .   .   Child: 1  Assign = : type int [line: 20]
.   .   .   .   .   Child: 0  Id z: type int [line: 20]
.   .   .   .   .   Child: 1  Const 3 : type int [line: 20]
.   .   Sibling: 10  If [line: 21]
.   .   .   Child: 0  Op > : type bool [line: 21]
.   .   .   .   Child: 0  Id x: type int [line: 21]
.   .   .   .   Child: 1  Const 5 : type int [line: 21]
.   .   .   Child: 1  If [line: 21]
.   .   .   .   Child: 0  Op > : type bool [line: 21]
.   .   .   .   .   Child: 0  Id y: type int [line: 21]
.   .   .   .   .   Child: 1  Const 6 : type int [line: 21]
.   .   .   .   Child: 1  Assign = : type int [line: 21]
.   .   .   .   .   Child: 0  Id z: type int [line: 21]
.   .   .   .   .   Child: 1  Const 4 : type int [line: 21]
.   .   .   .   Child: 2  Assign = : type int [line: 21]
.   .   .   .   .   Child: 0  Id z: type int [line: 21]
.   .   .   .   .   Child: 1  Const 5 : type int [line: 21]
.   .   Sibling: 11  If [line: 22]
.   .   .   Child: 0  Op > : type bool [line: 22]
.   .   .   .   Child: 0  Id x: type int [line: 22]
.   .   .   .   Child: 1  Const 7 : type int [line: 22]
.   .   .   Child: 1  If [line: 22]
.   .   .   .   Child: 0  Op > : type bool [line: 22]
.   .   .   .   .   Child: 0  Id y: type int [line: 22]
.   .   .   .   .   Child: 1  Const 8 : type int [line: 22]
.   .   .   .   Child: 1  Assign = : type int [line: 22]
.   .   .   .   .   Child: 0  Id z: type int [line: 22]
.   .   .   .   .   Child: 1  Const 6 : type int [line: 22]
.   .   .   .   Child: 2  Assign = : type int [line: 22]
.   .   .   .   .   Child: 0  Id z: type int [line: 22]
.   .   .   .   .   Child: 1  Const 7 : type int [line: 22]
.   .   .   Child: 2  Assign = : type int [line: 22]
.   .   .   .   Child: 0  Id z: type int [line: 22]
.   .   .   .   Child: 1  Const 8 : type int [line: 22]
.   .   Sibling: 12  If [line: 23]
.   .   .   Child: 0  Op < : type bool [line: 23]
.   .   .   .   Child: 0  Id x: type int [line: 23]
.   .   .   .   Child: 1  Const 9 : type int [line: 23]
.   .   .   Child: 1  While [line: 23]
.   .   .   .   Child: 0  Op > : type bool [line: 23]
.   .   .   .   .   Child: 0  Id y: type int [line: 23]
.   .   .   .   .   Child: 1  Const 10 : type int [line: 23]
.   .   .   .   Child: 1  Const 9 : type int [line: 23]
.   .   Sibling: 13  While [line: 24]
.   .   .   Child: 0  Op > : type bool [line: 24]
.   .   .   .   Child: 0  Id y: type int [line: 24]
.   .   .   .   Child: 1  Const 10 : type int [line: 24]
.   .   .   Child: 1  If [line: 24]
.   .   .   .   Child: 0  Op < : type bool [line: 24]
.   .   .   .   .   Child: 0  Id x: type int [line: 24]
.   .   .   .   .   Child: 1  Const 3 : type int [line: 24]
.   .   .   .   Child: 1  Const 3 : type int [line: 24]
.   .   Sibling: 14  While [line: 25]
.   .   .   Child: 0  Op > : type bool [line: 25]
.   .   .   .   Child: 0  Id y: type int [line: 25]
.   .   .   .   Child: 1  Const 10 : type int [line: 25]
.   .   .   Child: 1  If [line: 25]
.   .   .   .   Child: 0  Op < : type bool [line: 25]
.   .   .   .   .   Child: 0  Id x: type int [line: 25]
.   .   .   .   .   Child: 1  Const 3 : type int [line: 25]
.   .   .   .   Child: 1  Const 3 : type int [line: 25]
.   .   .   .   Child: 2  Const 9 : type int [line: 25]
.   .   Sibling: 15  If [line: 26]
.   .   .   Child: 0  Op < : type bool [line: 26]
.   .   .   .   Child: 0  Id x: type int [line: 26]
.   .   .   .   Child: 1  Const 9 : type int [line: 26]
.   .   .   Child: 1  While [line: 26]
.   .   .   .   Child: 0  Op > : type bool [line: 26]
.   .   .   .   .   Child: 0  Id y: type int [line: 26]
.   .   .   .   .   Child: 1  Const 10 : type int [line: 26]
.   .   .   .   Child: 1  If [line: 26]
.   .   .   .   .   Child: 0  Op < : type bool [line: 26]
.   .   .   .   .   .   Child: 0  Id x: type int [line: 26]
.   .   .   .   .   .   Child: 1  Const 3 : type int [line: 26]
.   .   .   .   .   Child: 1  Const 3 : type int [line: 26]
.   .   .   .   .   Child: 2  Const 9 : type int [line: 26]
.   .   Sibling: 16  While [line: 27]
.   .   .   Child: 0  Op < : type bool [line: 27]
.   .   .   .   Child: 0  Id y: type int [line: 27]
.   .   .   .   Child: 1  Const 11 : type int [line: 27]
.   .   .   Child: 1  If [line: 27]
.   .   .   .   Child: 0  Op < : type bool [line: 27]
.   .   .   .   .   Child: 0  Id x: type int [line: 27]
.   .   .   .   .   Child: 1  Const 12 : type int [line: 27]
.   .   .   .   Child: 1  While [line: 27]
.   .   .   .   .   Child: 0  Op > : type bool [line: 27]
.   .   .   .   .   .   Child: 0  Id y: type int [line: 27]
.   .   .   .   .   .   Child: 1  Const 13 : type int [line: 27]
.   .   .   .   .   Child: 1  Const 10 : type int [line: 27]
.   .   Sibling: 17  If [line: 28]
.   .   .   Child: 0  Op < : type bool [line: 28]
.   .   .   .   Child: 0  Id x: type int [line: 28]
.   .   .   .   Child: 1  Const 13 : type int [line: 28]
.   .   .   Child: 1  While [line: 28]
.   .   .   .   Child: 0  Op > : type bool [line: 28]
.   .   .   .   .   Child: 0  Id y: type int [line: 28]
.   .   .   .   .   Child: 1  Const 14 : type int [line: 28]
.   .   .   .   Child: 1  Const 20 : type int [line: 28]
.   .   .   Child: 2  Const 21 : type int [line: 28]
.   .   Sibling: 18  While [line: 29]
.   .   .   Child: 0  Op > : type bool [line: 29]
.   .   .   .   Child: 0  Id y: type int [line: 29]
.   .   .   .   Child: 1  Const 15 : type int [line: 29]
.   .   .   Child: 1  If [line: 29]
.   .   .   .   Child: 0  Op < : type bool [line: 29]
.   .   .   .   .   Child: 0  Id x: type int [line: 29]
.   .   .   .   .   Child: 1  Const 16 : type int [line: 29]
.   .   .   .   Child: 1  Const 22 : type int [line: 29]
.   .   .   .   Child: 2  Const 23 : type int [line: 29]
.   .   Sibling: 19  While [line: 30]
.   .   .   Child: 0  Op > : type bool [line: 30]
.   .   .   .   Child: 0  Id y: type int [line: 30]
.   .   .   .   Child: 1  Const 15 : type int [line: 30]
.   .   .   Child: 1  If [line: 30]
.   .   .   .   Child: 0  Op < : type bool [line: 30]
.   .   .   .   .   Child: 0  Id x: type int [line: 30]
.   .   .   .   .   Child: 1  Const 16 : type int [line: 30]
.   .   .   .   Child: 1  While [line: 30]
.   .   .   .   .   Child: 0  Op < : type bool [line: 30]
.   .   .   .   .   .   Child: 0  Id y: type int [line: 30]
.   .   .   .   .   .   Child: 1  Const 3 : type int [line: 30]
.   .   .   .   .   Child: 1  Const 9 : type int [line: 30]
.   .   .   .   Child: 2  Const 23 : type int [line: 30]
.   .   Sibling: 20  While [line: 31]
.   .   .   Child: 0  Op > : type bool [line: 31]
.   .   .   .   Child: 0  Id y: type int [line: 31]
.   .   .   .   Child: 1  Const 15 : type int [line: 31]
.   .   .   Child: 1  If [line: 31]
.   .   .   .   Child: 0  Op < : type bool [line: 31]
.   .   .   .   .   Child: 0  Id x: type int [line: 31]
.   .   .   .   .   Child: 1  Const 16 : type int [line: 31]
.   .   .   .   Child: 1  While [line: 31]
.   .   .   .   .   Child: 0  Op < : type bool [line: 31]
.   .   .   .   .   .   Child: 0  Id y: type int [line: 31]
.   .   .   .   .   .   Child: 1  Const 3 : type int [line: 31]
.   .   .   .   .   Child: 1  Const 9 : type int [line: 31]
.   .   .   .   Child: 2  While [line: 31]
.   .   .   .   .   Child: 0  Op > : type bool [line: 31]
.   .   .   .   .   .   Child: 0  Id y: type int [line: 31]
.   .   .   .   .   .   Child: 1  Const 3 : type int [line: 31]
.   .   .   .   .   Child: 1  Const 23 : type int [line: 31]
.   .   Sibling: 21  While [line: 32]
.   .   .   Child: 0  Op > : type bool [line: 32]
.   .   .   .   Child: 0  Id y: type int [line: 32]
.   .   .   .   Child: 1  Const 15 : type int [line: 32]
.   .   .   Child: 1  If [line: 32]
.   .   .   .   Child: 0  Op < : type bool [line: 32]
.   .   .   .   .   Child: 0  Id x: type int [line: 32]
.   .   .   .   .   Child: 1  Const 16 : type int [line: 32]
.   .   .   .   Child: 1  While [line: 32]
.   .   .   .   .   Child: 0  Op < : type bool [line: 32]
.   .   .   .   .   .   Child: 0  Id y: type int [line: 32]
.   .   .   .   .   .   Child: 1  Const 3 : type int [line: 32]
.   .   .   .   .   Child: 1  If [line: 32]
.   .   .   .   .   .   Child: 0  Id b: type bool [line: 32]
.   .   .   .   .   .   Child: 1  Const 34 : type int [line: 32]
.   .   .   .   .   .   Child: 2  Const 34 : type int [line: 32]
.   .   .   .   Child: 2  While [line: 32]
.   .   .   .   .   Child: 0  Op > : type bool [line: 32]
.   .   .   .   .   .   Child: 0  Id y: type int [line: 32]
.   .   .   .   .   .   Child: 1  Const 3 : type int [line: 32]
.   .   .   .   .   Child: 1  Const 23 : type int [line: 32]
.   .   Sibling: 22  While [line: 33]
.   .   .   Child: 0  Op > : type bool [line: 33]
.   .   .   .   Child: 0  Id y: type int [line: 33]
.   .   .   .   Child: 1  Const 15 : type int [line: 33]
.   .   .   Child: 1  If [line: 33]
.   .   .   .   Child: 0  Op < : type bool [line: 33]
.   .   .   .   .   Child: 0  Id x: type int [line: 33]
.   .   .   .   .   Child: 1  Const 16 : type int [line: 33]
.   .   .   .   Child: 1  Compound [line: 33]
.   .   .   .   .   Child: 1  While [line: 33]
.   .   .   .   .   .   Child: 0  Op < : type bool [line: 33]
.   .   .   .   .   .   .   Child: 0  Id y: type int [line: 33]
.   .   .   .   .   .   .   Child: 1  Const 3 : type int [line: 33]
.   .   .   .   .   .   Child: 1  If [line: 33]
.   .   .   .   .   .   .   Child: 0  Id b: type bool [line: 33]
.   .   .   .   .   .   .   Child: 1  Const 34 : type int [line: 33]
.   .   .   .   Child: 2  While [line: 33]
.   .   .   .   .   Child: 0  Op > : type bool [line: 33]
.   .   .   .   .   .   Child: 0  Id y: type int [line: 33]
.   .   .   .   .   .   Child: 1  Const 3 : type int [line: 33]
.   .   .   .   .   Child: 1  Const 23 : type int [line: 33]
.   .   Sibling: 23  While [line: 35]
.   .   .   Child: 0  Id b: type bool [line: 35]
.   .   .   Child: 1  While [line: 35]
.   .   .   .   Child: 0  Id b: type bool [line: 35]
.   .   .   .   Child: 1  If [line: 35]
.   .   .   .   .   Child: 0  Id b: type bool [line: 35]
.   .   .   .   .   Child: 1  Id x: type int [line: 35]
.   .   .   .   .   Child: 2  Id y: type int [line: 35]
.   .   Sibling: 24  While [line: 36]
.   .   .   Child: 0  Id b: type bool [line: 36]
.   .   .   Child: 1  While [line: 36]
.   .   .   .   Child: 0  Id b: type bool [line: 36]
.   .   .   .   Child: 1  If [line: 36]
.   .   .   .   .   Child: 0  Id b: type bool [line: 36]
.   .   .   .   .   Child: 1  Id x: type int [line: 36]
.   .   Sibling: 25  If [line: 36]
.   .   .   Child: 0  Id b: type bool [line: 36]
.   .   .   Child: 1  Id y: type int [line: 36]
.   .   .   Child: 2  Id z: type int [line: 36]
.   .   Sibling: 26  While [line: 38]
.   .   .   Child: 0  Id b: type bool [line: 38]
.   .   .   Child: 1  While [line: 38]
.   .   .   .   Child: 0  Id b: type bool [line: 38]
.   .   .   .   Child: 1  If [line: 38]
.   .   .   .   .   Child: 0  Id b: type bool [line: 38]
.   .   .   .   .   Child: 1  Id x: type int [line: 38]
.   .   Sibling: 27  While [line: 39]
.   .   .   Child: 0  Id b: type bool [line: 39]
.   .   .   Child: 1  While [line: 39]
.   .   .   .   Child: 0  Id b: type bool [line: 39]
.   .   .   .   Child: 1  If [line: 39]
.   .   .   .   .   Child: 0  Id b: type bool [line: 39]
.   .   .   .   .   Child: 1  Id x: type int [line: 39]
.   .   Sibling: 28  If [line: 39]
.   .   .   Child: 0  Id b: type bool [line: 39]
.   .   .   Child: 1  Id y: type int [line: 39]
.   .   Sibling: 29  While [line: 41]
.   .   .   Child: 0  Id b: type bool [line: 41]
.   .   .   Child: 1  If [line: 41]
.   .   .   .   Child: 0  Id c: type bool [line: 41]
.   .   .   .   Child: 1  While [line: 41]
.   .   .   .   .   Child: 0  Id b: type bool [line: 41]
.   .   .   .   .   Child: 1  If [line: 41]
.   .   .   .   .   .   Child: 0  Id b: type bool [line: 41]
.   .   .   .   .   .   Child: 1  Id x: type int [line: 41]
.   .   .   .   .   .   Child: 2  Id y: type int [line: 41]
.   .   Sibling: 30  While [line: 42]
.   .   .   Child: 0  Id b: type bool [line: 42]
.   .   .   Child: 1  If [line: 42]
.   .   .   .   Child: 0  Id c: type bool [line: 42]
.   .   .   .   Child: 1  While [line: 42]
.   .   .   .   .   Child: 0  Id b: type bool [line: 42]
.   .   .   .   .   Child: 1  If [line: 42]
.   .   .   .   .   .   Child: 0  Id b: type bool [line: 42]
.   .   .   .   .   .   Child: 1  Id x: type int [line: 42]
.   .   Sibling: 31  If [line: 42]
.   .   .   Child: 0  Id b: type bool [line: 42]
.   .   .   Child: 1  Id y: type int [line: 42]
.   .   .   Child: 2  Id z: type int [line: 42]
.   .   Sibling: 32  If [line: 44]
.   .   .   Child: 0  Id c: type bool [line: 44]
.   .   .   Child: 1  While [line: 44]
.   .   .   .   Child: 0  Id b: type bool [line: 44]
.   .   .   .   Child: 1  While [line: 44]
.   .   .   .   .   Child: 0  Id b: type bool [line: 44]
.   .   .   .   .   Child: 1  If [line: 44]
.   .   .   .   .   .   Child: 0  Id b: type bool [line: 44]
.   .   .   .   .   .   Child: 1  Id x: type int [line: 44]
.   .   .   .   .   .   Child: 2  Id y: type int [line: 44]
.   .   Sibling: 33  If [line: 45]
.   .   .   Child: 0  Id c: type bool [line: 45]
.   .   .   Child: 1  While [line: 45]
.   .   .   .   Child: 0  Id b: type bool [line: 45]
.   .   .   .   Child: 1  While [line: 45]
.   .   .   .   .   Child: 0  Id b: type bool [line: 45]
.   .   .   .   .   Child: 1  If [line: 45]
.   .   .   .   .   .   Child: 0  Id b: type bool [line: 45]
.   .   .   .   .   .   Child: 1  Id x: type int [line: 45]
.   .   Sibling: 34  If [line: 45]
.   .   .   Child: 0  Id b: type bool [line: 45]
.   .   .   Child: 1  Id y: type int [line: 45]
.   .   .   Child: 2  Id z: type int [line: 45]
.   .   Sibling: 35  If [line: 47]
.   .   .   Child: 0  Id c: type bool [line: 47]
.   .   .   Child: 1  While [line: 47]
.   .   .   .   Child: 0  Id b: type bool [line: 47]
.   .   .   .   Child: 1  While [line: 47]
.   .   .   .   .   Child: 0  Id b: type bool [line: 47]
.   .   .   .   .   Child: 1  If [line: 47]
.   .   .   .   .   .   Child: 0  Id b: type bool [line: 47]
.   .   .   .   .   .   Child: 1  Id x: type int [line: 47]
.   .   .   .   .   .   Child: 2  Id y: type int [line: 47]
.   .   .   Child: 2  Id z: type int [line: 47]
.   .   Sibling: 36  While [line: 49]
.   .   .   Child: 0  Id a: type bool [line: 49]
.   .   .   Child: 1  While [line: 49]
.   .   .   .   Child: 0  Id b: type bool [line: 49]
.   .   .   .   Child: 1  While [line: 49]
.   .   .   .   .   Child: 0  Id c: type bool [line: 49]
.   .   .   .   .   Child: 1  While [line: 49]
.   .   .   .   .   .   Child: 0  Id d: type bool [line: 49]
.   .   .   .   .   .   Child: 1  Id e: type bool [line: 49]
.   .   Sibling: 37  If [line: 50]
.   .   .   Child: 0  Id a: type bool [line: 50]
.   .   .   Child: 1  If [line: 50]
.   .   .   .   Child: 0  Id b: type bool [line: 50]
.   .   .   .   Child: 1  If [line: 50]
.   .   .   .   .   Child: 0  Id c: type bool [line: 50]
.   .   .   .   .   Child: 1  If [line: 50]
.   .   .   .   .   .   Child: 0  Id d: type bool [line: 50]
.   .   .   .   .   .   Child: 1  Id e: type bool [line: 50]
.   .   Sibling: 38  If [line: 51]
.   .   .   Child: 0  Id a: type bool [line: 51]
.   .   .   Child: 2  If [line: 51]
.   .   .   .   Child: 0  Id b: type bool [line: 51]
.   .   .   .   Child: 2  If [line: 51]
.   .   .   .   .   Child: 0  Id c: type bool [line: 51]
.   .   .   .   .   Child: 2  If [line: 51]
.   .   .   .   .   .   Child: 0  Id d: type bool [line: 51]
.   .   .   .   .   .   Child: 2  Id e: type bool [line: 51]
.   .   Sibling: 39  Return [line: 53]
.   .   .   Child: 0  Op * : type int [line: 53]
.   .   .   .   Child: 0  Id x: type int [line: 53]
.   .   .   .   Child: 1  Id y: type int [line: 53]
Number of warnings: 0
Number of errors: 1
