====================================
FILE: uninitialized.c-
WARNING(12): Variable y may be uninitialized when used here.
WARNING(14): Variable a may be uninitialized when used here.
WARNING(14): Variable v may be uninitialized when used here.
WARNING(17): Variable r may be uninitialized when used here.
WARNING(4): Expecting to return type int but function 'main' has no return statement.
WARNING(6): The variable x seems not to be used.
Var g: type int [line: 2]
Sibling: 1  Func main: returns type int [line: 4]
.   Child: 0  Param h: type int [line: 4]
.   Child: 1  Compound [line: 4]
.   .   Child: 0  Var s: static type int [line: 5]
.   .   Sibling: 1  Var v: type int [line: 6]
.   .   Sibling: 2  Var w: type int [line: 6]
.   .   Sibling: 3  Var x: type int [line: 6]
.   .   Sibling: 4  Var y: type int [line: 6]
.   .   Sibling: 5  Var z: type int [line: 6]
.   .   Sibling: 6  Var p: type int [line: 7]
.   .   Sibling: 7  Var q: type int [line: 7]
.   .   Sibling: 8  Var r: type int [line: 7]
.   .   Sibling: 9  Var a: array of type int [line: 8]
.   .   Sibling: 10  Var t: type int [line: 9]
.   .   .   Child: 0  Const 1000 : type int [line: 9]
.   .   Child: 1  Assign = : type int [line: 11]
.   .   .   Child: 0  Id z: type int [line: 11]
.   .   .   Child: 1  Const 4 : type int [line: 11]
.   .   Sibling: 1  Assign = : type int [line: 12]
.   .   .   Child: 0  Id z: type int [line: 12]
.   .   .   Child: 1  Op * : type int [line: 12]
.   .   .   .   Child: 0  Id y: type int [line: 12]
.   .   .   .   Child: 1  Id y: type int [line: 12]
.   .   Sibling: 2  Id y: type int [line: 13]
.   .   Sibling: 3  Op [ : type int [line: 14]
.   .   .   Child: 0  Id a: array of type int [line: 14]
.   .   .   Child: 1  Id v: type int [line: 14]
.   .   Sibling: 4  Assign = : type int [line: 15]
.   .   .   Child: 0  Id v: type int [line: 15]
.   .   .   Child: 1  Op + : type int [line: 15]
.   .   .   .   Child: 0  Id v: type int [line: 15]
.   .   .   .   Child: 1  Const 1 : type int [line: 15]
.   .   Sibling: 5  Assign = : type int [line: 16]
.   .   .   Child: 0  Id w: type int [line: 16]
.   .   .   Child: 1  Assign = : type int [line: 16]
.   .   .   .   Child: 0  Id z: type int [line: 16]
.   .   .   .   Child: 1  Id y: type int [line: 16]
.   .   Sibling: 6  Assign = : type int [line: 17]
.   .   .   Child: 0  Id p: type int [line: 17]
.   .   .   Child: 1  Assign = : type int [line: 17]
.   .   .   .   Child: 0  Id q: type int [line: 17]
.   .   .   .   Child: 1  Id r: type int [line: 17]
.   .   Sibling: 7  Id y: type int [line: 18]
.   .   Sibling: 8  Id v: type int [line: 19]
.   .   Sibling: 9  Id h: type int [line: 20]
.   .   Sibling: 10  Id g: type int [line: 21]
.   .   Sibling: 11  Id s: static type int [line: 22]
.   .   Sibling: 12  Id t: type int [line: 23]
Number of warnings: 6
Number of errors: 0
