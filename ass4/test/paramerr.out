====================================
FILE: paramerr.c-
WARNING(15): Expecting to return type int but function 'ant_no' has no return statement.
WARNING(16): Expecting to return type bool but function 'bear_no' has no return statement.
WARNING(17): Expecting to return type char but function 'cat_no' has no return statement.
WARNING(19): The variable aardvark seems not to be used.
WARNING(19): The variable baboon seems not to be used.
WARNING(19): The variable cow seems not to be used.
WARNING(21): The variable asp seems not to be used.
WARNING(21): The variable bull seems not to be used.
WARNING(21): The variable crow seems not to be used.
WARNING(28): Variable a may be uninitialized when used here.
WARNING(28): Variable b may be uninitialized when used here.
WARNING(28): Variable c may be uninitialized when used here.
ERROR(29): Expecting array in parameter 1 of call to 'elk' declared on line 21.
ERROR(29): Expecting array in parameter 2 of call to 'elk' declared on line 21.
ERROR(29): Expecting array in parameter 3 of call to 'elk' declared on line 21.
ERROR(30): Function 'fox' is not declared.
WARNING(32): Variable aa may be uninitialized when used here.
ERROR(32): Not expecting array in parameter 1 of call to 'dog' declared on line 19.
WARNING(32): Variable bb may be uninitialized when used here.
ERROR(32): Not expecting array in parameter 2 of call to 'dog' declared on line 19.
WARNING(32): Variable cc may be uninitialized when used here.
ERROR(32): Not expecting array in parameter 3 of call to 'dog' declared on line 19.
ERROR(34): Function 'fox' is not declared.
ERROR(38): Expecting array in parameter 1 of call to 'elk' declared on line 21.
ERROR(38): Expecting array in parameter 2 of call to 'elk' declared on line 21.
ERROR(38): Expecting array in parameter 3 of call to 'elk' declared on line 21.
ERROR(39): Function 'fox' is not declared.
ERROR(41): '+' requires operands of type int but rhs is of type bool.
ERROR(41): '-' requires operands of type int but lhs is of type bool.
ERROR(41): '-' requires operands of type int but rhs is of type char.
ERROR(41): Expecting type bool in parameter 2 of call to 'dog' declared on line 19 but got type int.
ERROR(41): '*' requires operands of type int but rhs is of type char.
ERROR(41): Expecting type char in parameter 3 of call to 'dog' declared on line 19 but got type int.
ERROR(42): '+' requires operands of type int but rhs is of type bool.
ERROR(42): Expecting array in parameter 1 of call to 'elk' declared on line 21.
ERROR(42): '-' requires operands of type int but lhs is of type bool.
ERROR(42): '-' requires operands of type int but rhs is of type char.
ERROR(42): Expecting type bool in parameter 2 of call to 'elk' declared on line 21 but got type int.
ERROR(42): Expecting array in parameter 2 of call to 'elk' declared on line 21.
ERROR(42): '*' requires operands of type int but rhs is of type char.
ERROR(42): Expecting type char in parameter 3 of call to 'elk' declared on line 21 but got type int.
ERROR(42): Expecting array in parameter 3 of call to 'elk' declared on line 21.
ERROR(44): Function 'emu' is not declared.
ERROR(44): Variable 'x' is not declared.
ERROR(44): '+' requires operands of type int but rhs is of type bool.
ERROR(44): Variable 'parrot' is not declared.
ERROR(44): Variable 'x' is not declared.
ERROR(45): Function 'emu' is not declared.
ERROR(45): Function 'emu' is not declared.
ERROR(45): Variable 'x' is not declared.
ERROR(45): '+' requires operands of type int but rhs is of type bool.
ERROR(45): Variable 'parrot' is not declared.
ERROR(45): Variable 'x' is not declared.
ERROR(45): Variable 'x' is not declared.
ERROR(45): '*' requires operands of type int but rhs is of type bool.
Func ant: returns type int [line: 11]
.   Child: 1  Return [line: 11]
.   .   Child: 0  Const 666 : type int [line: 11]
Sibling: 1  Func bear: returns type bool [line: 12]
.   Child: 1  Return [line: 12]
.   .   Child: 0  Const true : type bool [line: 12]
Sibling: 2  Func cat: returns type char [line: 13]
.   Child: 1  Return [line: 13]
.   .   Child: 0  Const: 'c' : type char [line: 13]
Sibling: 3  Func ant_no: returns type int [line: 15]
Sibling: 4  Func bear_no: returns type bool [line: 16]
Sibling: 5  Func cat_no: returns type char [line: 17]
Sibling: 6  Func dog: returns type void [line: 19]
.   Child: 0  Param aardvark: type int [line: 19]
.   Sibling: 1  Param baboon: type bool [line: 19]
.   Sibling: 2  Param cow: type char [line: 19]
Sibling: 7  Func elk: returns type void [line: 21]
.   Child: 0  Param asp: array of type int [line: 21]
.   Sibling: 1  Param bull: array of type bool [line: 21]
.   Sibling: 2  Param crow: array of type char [line: 21]
Sibling: 8  Func main: returns type void [line: 23]
.   Child: 1  Compound [line: 24]
.   .   Child: 0  Var a: type int [line: 25]
.   .   Sibling: 1  Var b: type bool [line: 25]
.   .   Sibling: 2  Var c: type char [line: 25]
.   .   Sibling: 3  Var aa: array of type int [line: 26]
.   .   Sibling: 4  Var bb: array of type bool [line: 26]
.   .   Sibling: 5  Var cc: array of type char [line: 26]
.   .   Child: 1  Call dog: type void [line: 28]
.   .   .   Child: 0  Id a: type int [line: 28]
.   .   .   Sibling: 1  Id b: type bool [line: 28]
.   .   .   Sibling: 2  Id c: type char [line: 28]
.   .   Sibling: 1  Call elk: type void [line: 29]
.   .   .   Child: 0  Id a: type int [line: 29]
.   .   .   Sibling: 1  Id b: type bool [line: 29]
.   .   .   Sibling: 2  Id c: type char [line: 29]
.   .   Sibling: 2  Call fox: undefined type [line: 30]
.   .   .   Child: 0  Id a: type int [line: 30]
.   .   .   Sibling: 1  Id b: type bool [line: 30]
.   .   .   Sibling: 2  Id c: type char [line: 30]
.   .   Sibling: 3  Call dog: type void [line: 32]
.   .   .   Child: 0  Id aa: array of type int [line: 32]
.   .   .   Sibling: 1  Id bb: array of type bool [line: 32]
.   .   .   Sibling: 2  Id cc: array of type char [line: 32]
.   .   Sibling: 4  Call elk: type void [line: 33]
.   .   .   Child: 0  Id aa: array of type int [line: 33]
.   .   .   Sibling: 1  Id bb: array of type bool [line: 33]
.   .   .   Sibling: 2  Id cc: array of type char [line: 33]
.   .   Sibling: 5  Call fox: undefined type [line: 34]
.   .   .   Child: 0  Id aa: array of type int [line: 34]
.   .   .   Sibling: 1  Id bb: array of type bool [line: 34]
.   .   .   Sibling: 2  Id cc: array of type char [line: 34]
.   .   Sibling: 6  Call dog: type void [line: 36]
.   .   .   Child: 0  Call ant: type int [line: 36]
.   .   .   Sibling: 1  Call bear: type bool [line: 36]
.   .   .   Sibling: 2  Call cat: type char [line: 36]
.   .   Sibling: 7  Call dog: type void [line: 37]
.   .   .   Child: 0  Call ant_no: type int [line: 37]
.   .   .   Sibling: 1  Call bear_no: type bool [line: 37]
.   .   .   Sibling: 2  Call cat_no: type char [line: 37]
.   .   Sibling: 8  Call elk: type void [line: 38]
.   .   .   Child: 0  Call ant: type int [line: 38]
.   .   .   Sibling: 1  Call bear: type bool [line: 38]
.   .   .   Sibling: 2  Call cat: type char [line: 38]
.   .   Sibling: 9  Call fox: undefined type [line: 39]
.   .   .   Child: 0  Call ant: type int [line: 39]
.   .   .   Sibling: 1  Call bear: type bool [line: 39]
.   .   .   Sibling: 2  Call cat: type char [line: 39]
.   .   Sibling: 10  Call dog: type void [line: 41]
.   .   .   Child: 0  Op + : type int [line: 41]
.   .   .   .   Child: 0  Id a: type int [line: 41]
.   .   .   .   Child: 1  Id b: type bool [line: 41]
.   .   .   Sibling: 1  Op - : type int [line: 41]
.   .   .   .   Child: 0  Id b: type bool [line: 41]
.   .   .   .   Child: 1  Id c: type char [line: 41]
.   .   .   Sibling: 2  Op * : type int [line: 41]
.   .   .   .   Child: 0  Id a: type int [line: 41]
.   .   .   .   Child: 1  Id c: type char [line: 41]
.   .   Sibling: 11  Call elk: type void [line: 42]
.   .   .   Child: 0  Op + : type int [line: 42]
.   .   .   .   Child: 0  Id a: type int [line: 42]
.   .   .   .   Child: 1  Id b: type bool [line: 42]
.   .   .   Sibling: 1  Op - : type int [line: 42]
.   .   .   .   Child: 0  Id b: type bool [line: 42]
.   .   .   .   Child: 1  Id c: type char [line: 42]
.   .   .   Sibling: 2  Op * : type int [line: 42]
.   .   .   .   Child: 0  Id a: type int [line: 42]
.   .   .   .   Child: 1  Id c: type char [line: 42]
.   .   Sibling: 12  Call emu: undefined type [line: 44]
.   .   .   Child: 0  Op + : type int [line: 44]
.   .   .   .   Child: 0  Id x: undefined type [line: 44]
.   .   .   .   Child: 1  Id b: type bool [line: 44]
.   .   .   Sibling: 1  Id parrot: undefined type [line: 44]
.   .   .   Sibling: 2  Op & : type bool [line: 44]
.   .   .   .   Child: 0  Id b: type bool [line: 44]
.   .   .   .   Child: 1  Id x: undefined type [line: 44]
.   .   Sibling: 13  Call emu: undefined type [line: 45]
.   .   .   Child: 0  Const false : type bool [line: 45]
.   .   .   Sibling: 1  Op & : type bool [line: 45]
.   .   .   .   Child: 0  Const true : type bool [line: 45]
.   .   .   .   Child: 1  Call emu: undefined type [line: 45]
.   .   .   .   .   Child: 0  Op + : type int [line: 45]
.   .   .   .   .   .   Child: 0  Id x: undefined type [line: 45]
.   .   .   .   .   .   Child: 1  Id b: type bool [line: 45]
.   .   .   .   .   Sibling: 1  Id parrot: undefined type [line: 45]
.   .   .   .   .   Sibling: 2  Op & : type bool [line: 45]
.   .   .   .   .   .   Child: 0  Id b: type bool [line: 45]
.   .   .   .   .   .   Child: 1  Id x: undefined type [line: 45]
.   .   .   Sibling: 2  Const true : type bool [line: 45]
.   .   .   Sibling: 3  Op * : type int [line: 45]
.   .   .   .   Child: 0  Id x: undefined type [line: 45]
.   .   .   .   Child: 1  Id b: type bool [line: 45]
Number of warnings: 15
Number of errors: 40
