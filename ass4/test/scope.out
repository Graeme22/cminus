====================================
FILE: scope.c-
ERROR(7): Function 'bat' is not declared.
WARNING(8): Variable a may be uninitialized when used here.
ERROR(8): '|' requires operands of type bool but lhs is of type int.
ERROR(8): '|' requires operands of type bool but rhs is of type int.
ERROR(14): Variable 'b' is not declared.
WARNING(15): Variable c may be uninitialized when used here.
ERROR(24): Variable 'b' is not declared.
ERROR(25): Variable 'c' is not declared.
ERROR(29): Variable 'b' is not declared.
ERROR(30): Variable 'c' is not declared.
WARNING(3): Expecting to return type int but function 'ant' has no return statement.
ERROR(40): Variable 'x' is not declared.
WARNING(43): Variable z may be uninitialized when used here.
ERROR(44): Variable 'p' is not declared.
ERROR(45): Variable 'q' is not declared.
ERROR(45): Variable 'r' is not declared.
ERROR(46): Variable 's' is not declared.
ERROR(46): Too many parameters passed for function 'ant' declared on line 3.
ERROR(46): Variable 't' is not declared.
ERROR(47): Variable 'u' is not declared.
ERROR(47): Function 'cow' is not declared.
ERROR(47): Variable 'v' is not declared.
ERROR(48): Variable 'abraxsis' is not declared.
ERROR(49): Variable 'a' is not declared.
WARNING(36): Expecting to return type int but function 'bat' has no return statement.
WARNING(39): The variable bat seems not to be used.
ERROR(54): Symbol 'g' is already declared at line 2.
ERROR(56): Symbol 'g' is already declared at line 2.
ERROR(58): Variable 'x' is not declared.
ERROR(61): Symbol 'g' is already declared at line 2.
ERROR(62): Symbol 'ant' is already declared at line 3.
ERROR(LINKER): Procedure main is not declared.
Var g: type int [line: 2]
Sibling: 1  Func ant: returns type int [line: 3]
.   Child: 0  Param x: type int [line: 3]
.   Child: 1  Compound [line: 4]
.   .   Child: 0  Var a: type int [line: 5]
.   .   Child: 1  Call bat: undefined type [line: 7]
.   .   .   Child: 0  Const 3 : type int [line: 7]
.   .   Sibling: 1  Op | : type bool [line: 8]
.   .   .   Child: 0  Id a: type int [line: 8]
.   .   .   Child: 1  Id a: type int [line: 8]
.   .   Sibling: 2  Id x: type int [line: 9]
.   .   Sibling: 3  Id g: type int [line: 10]
.   .   Sibling: 4  Compound [line: 11]
.   .   .   Child: 0  Var c: type int [line: 12]
.   .   .   Child: 1  Id a: type int [line: 13]
.   .   .   Sibling: 1  Id b: undefined type [line: 14]
.   .   .   Sibling: 2  Id c: type int [line: 15]
.   .   .   Sibling: 3  Id g: type int [line: 16]
.   .   .   Sibling: 4  Id x: type int [line: 17]
.   .   .   Sibling: 5  Compound [line: 18]
.   .   .   .   Child: 1  Id c: type int [line: 19]
.   .   .   .   Sibling: 1  Id a: type int [line: 20]
.   .   Sibling: 5  Id a: type int [line: 23]
.   .   Sibling: 6  Id b: undefined type [line: 24]
.   .   Sibling: 7  Id c: undefined type [line: 25]
.   .   Sibling: 8  Id x: type int [line: 26]
.   .   Sibling: 9  Compound [line: 27]
.   .   .   Child: 1  Id a: type int [line: 28]
.   .   .   Sibling: 1  Id b: undefined type [line: 29]
.   .   .   Sibling: 2  Id c: undefined type [line: 30]
.   .   .   Sibling: 3  Id x: type int [line: 31]
.   .   Sibling: 10  Id x: type int [line: 33]
Sibling: 2  Func bat: returns type int [line: 36]
.   Child: 0  Param y: type int [line: 36]
.   Child: 1  Compound [line: 37]
.   .   Child: 0  Var z: type int [line: 38]
.   .   Sibling: 1  Var bat: type int [line: 39]
.   .   Child: 1  Id x: undefined type [line: 40]
.   .   Sibling: 1  Call ant: type int [line: 41]
.   .   .   Child: 0  Id y: type int [line: 41]
.   .   Sibling: 2  Call ant: type int [line: 42]
.   .   .   Child: 0  Id g: type int [line: 42]
.   .   Sibling: 3  Call ant: type int [line: 43]
.   .   .   Child: 0  Id z: type int [line: 43]
.   .   Sibling: 4  Id p: undefined type [line: 44]
.   .   Sibling: 5  Op + : type int [line: 45]
.   .   .   Child: 0  Id q: undefined type [line: 45]
.   .   .   Child: 1  Id r: undefined type [line: 45]
.   .   Sibling: 6  Call ant: type int [line: 46]
.   .   .   Child: 0  Id s: undefined type [line: 46]
.   .   .   Sibling: 1  Id t: undefined type [line: 46]
.   .   Sibling: 7  Assign = : undefined type [line: 47]
.   .   .   Child: 0  Id u: undefined type [line: 47]
.   .   .   Child: 1  Call cow: undefined type [line: 47]
.   .   .   .   Child: 0  Id v: undefined type [line: 47]
.   .   Sibling: 8  Id abraxsis: undefined type [line: 48]
.   .   Sibling: 9  Id a: undefined type [line: 49]
.   .   Sibling: 10  Id z: type int [line: 50]
.   .   Sibling: 11  Id g: type int [line: 51]
Sibling: 3  Var g: type int [line: 54]
Sibling: 4  Func g: returns type int [line: 56]
.   Child: 1  Compound [line: 57]
.   .   Child: 1  Return [line: 58]
.   .   .   Child: 0  Id x: undefined type [line: 58]
Sibling: 5  Func g: returns type void [line: 61]
Sibling: 6  Func ant: returns type void [line: 62]
Number of warnings: 6
Number of errors: 26
