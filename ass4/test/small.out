====================================
FILE: small.c-
ERROR(21): Variable 'aardvark' is not declared.
ERROR(21): Cannot index nonarray 'aardvark'.
WARNING(21): Variable inn may be uninitialized when used here.
ERROR(23): Cannot index nonarray 'inn'.
WARNING(24): Variable zz may be uninitialized when used here.
WARNING(19): The variable four seems not to be used.
ERROR(28): Function 'max' at line 7 is expecting to return type int but return has no return value.
WARNING(10): The variable c seems not to be used.
ERROR(LINKER): Procedure main is not declared.
Var a: type bool [line: 3]
Sibling: 1  Var b: array of type int [line: 4]
Sibling: 2  Func max: returns type int [line: 7]
.   Child: 0  Param x: type int [line: 7]
.   Sibling: 1  Param y: type int [line: 7]
.   Child: 1  Compound [line: 8]
.   .   Child: 0  Var z: type int [line: 9]
.   .   Sibling: 1  Var zz: type int [line: 9]
.   .   Sibling: 2  Var c: type char [line: 10]
.   .   Child: 1  If [line: 12]
.   .   .   Child: 0  Op > : type bool [line: 12]
.   .   .   .   Child: 0  Id x: type int [line: 12]
.   .   .   .   Child: 1  Id y: type int [line: 12]
.   .   .   Child: 1  Assign = : type int [line: 12]
.   .   .   .   Child: 0  Id z: type int [line: 12]
.   .   .   .   Child: 1  Id x: type int [line: 12]
.   .   .   Child: 2  Assign = : type int [line: 13]
.   .   .   .   Child: 0  Id z: type int [line: 13]
.   .   .   .   Child: 1  Id y: type int [line: 13]
.   .   Sibling: 1  Assign = : type int [line: 15]
.   .   .   Child: 0  Op [ : type int [line: 15]
.   .   .   .   Child: 0  Id b: array of type int [line: 15]
.   .   .   .   Child: 1  Const 41 : type int [line: 15]
.   .   .   Child: 1  Call max: type int [line: 15]
.   .   .   .   Child: 0  Op [ : type int [line: 15]
.   .   .   .   .   Child: 0  Id b: array of type int [line: 15]
.   .   .   .   .   Child: 1  Op * : type int [line: 15]
.   .   .   .   .   .   Child: 0  Const 42 : type int [line: 15]
.   .   .   .   .   .   Child: 1  Const 1 : type int [line: 15]
.   .   .   .   Sibling: 1  Const 43 : type int [line: 15]
.   .   Sibling: 2  While [line: 18]
.   .   .   Child: 0  Op > : type bool [line: 18]
.   .   .   .   Child: 0  Const 666 : type int [line: 18]
.   .   .   .   Child: 1  Const 665 : type int [line: 18]
.   .   .   Child: 1  Compound [line: 18]
.   .   .   .   Child: 0  Var inn: type int [line: 19]
.   .   .   .   Sibling: 1  Var four: type int [line: 19]
.   .   .   .   Child: 1  Assign = : undefined type [line: 21]
.   .   .   .   .   Child: 0  Op [ : undefined type [line: 21]
.   .   .   .   .   .   Child: 0  Id aardvark: undefined type [line: 21]
.   .   .   .   .   .   Child: 1  Const 2 : type int [line: 21]
.   .   .   .   .   Child: 1  Id inn: type int [line: 21]
.   .   .   .   Sibling: 1  Op [ : type int [line: 22]
.   .   .   .   .   Child: 0  Id b: array of type int [line: 22]
.   .   .   .   .   Child: 1  Const 3 : type int [line: 22]
.   .   .   .   Sibling: 2  Op [ : type int [line: 23]
.   .   .   .   .   Child: 0  Id inn: type int [line: 23]
.   .   .   .   .   Child: 1  Const 6 : type int [line: 23]
.   .   .   .   Sibling: 3  Assign = : type int [line: 24]
.   .   .   .   .   Child: 0  Id z: type int [line: 24]
.   .   .   .   .   Child: 1  Id zz: type int [line: 24]
.   .   .   .   Sibling: 4  Break [line: 25]
.   .   Sibling: 3  Return [line: 28]
Number of warnings: 4
Number of errors: 5
