====================================
FILE: arrayops.c-
ERROR(11): '=' requires both operands be arrays or not but lhs is not an array and rhs is an array.
ERROR(12): '=' requires both operands be arrays or not but lhs is an array and rhs is not an array.
ERROR(16): The operation '-' does not work with arrays.
ERROR(18): Cannot index nonarray 'a'.
ERROR(19): Cannot index nonarray 'a'.
ERROR(19): Array index is the unindexed array 'aa'.
ERROR(21): Array index is the unindexed array 'aa'.
ERROR(23): The operation '*' only works with arrays.
ERROR(26): The operation '?' does not work with arrays.
ERROR(28): The operation '!' does not work with arrays.
ERROR(30): The operation '++' does not work with arrays.
ERROR(33): The operation '+' does not work with arrays.
ERROR(34): The operation '+' does not work with arrays.
ERROR(35): The operation '+' does not work with arrays.
ERROR(38): The operation '&' does not work with arrays.
ERROR(39): The operation '&' does not work with arrays.
ERROR(40): The operation '&' does not work with arrays.
WARNING(42): Variable c may be uninitialized when used here.
ERROR(42): Cannot index nonarray 'c'.
WARNING(43): Variable cc may be uninitialized when used here.
ERROR(44): Cannot index nonarray 'c'.
ERROR(44): '=' requires both operands be arrays or not but lhs is an array and rhs is not an array.
ERROR(45): '=' requires both operands be arrays or not but lhs is an array and rhs is not an array.
ERROR(48): '=' requires both operands be arrays or not but lhs is an array and rhs is not an array.
Func main: returns type void [line: 1]
.   Child: 1  Compound [line: 2]
.   .   Child: 0  Var a: type int [line: 3]
.   .   Sibling: 1  Var aa: array of type int [line: 3]
.   .   Sibling: 2  Var b: type bool [line: 4]
.   .   Sibling: 3  Var bb: array of type bool [line: 4]
.   .   Sibling: 4  Var c: type char [line: 5]
.   .   Sibling: 5  Var cc: array of type char [line: 5]
.   .   Child: 1  Assign = : type int [line: 7]
.   .   .   Child: 0  Id a: type int [line: 7]
.   .   .   Child: 1  Const 42 : type int [line: 7]
.   .   Sibling: 1  Assign = : type bool [line: 7]
.   .   .   Child: 0  Id b: type bool [line: 7]
.   .   .   Child: 1  Assign = : type bool [line: 7]
.   .   .   .   Child: 0  Op [ : type bool [line: 7]
.   .   .   .   .   Child: 0  Id bb: array of type bool [line: 7]
.   .   .   .   .   Child: 1  Const 2 : type int [line: 7]
.   .   .   .   Child: 1  Const true : type bool [line: 7]
.   .   Sibling: 2  Assign = : type int [line: 8]
.   .   .   Child: 0  Op [ : type int [line: 8]
.   .   .   .   Child: 0  Id aa: array of type int [line: 8]
.   .   .   .   Child: 1  Const 1 : type int [line: 8]
.   .   .   Child: 1  Const 666 : type int [line: 8]
.   .   Sibling: 3  Assign = : type int [line: 10]
.   .   .   Child: 0  Id a: type int [line: 10]
.   .   .   Child: 1  Id a: type int [line: 10]
.   .   Sibling: 4  Assign = : type int [line: 11]
.   .   .   Child: 0  Id a: type int [line: 11]
.   .   .   Child: 1  Id aa: array of type int [line: 11]
.   .   Sibling: 5  Assign = : array of type int [line: 12]
.   .   .   Child: 0  Id aa: array of type int [line: 12]
.   .   .   Child: 1  Id a: type int [line: 12]
.   .   Sibling: 6  Assign = : array of type int [line: 13]
.   .   .   Child: 0  Id aa: array of type int [line: 13]
.   .   .   Child: 1  Id aa: array of type int [line: 13]
.   .   Sibling: 7  Op - : type int [line: 15]
.   .   .   Child: 0  Id a: type int [line: 15]
.   .   Sibling: 8  Op - : type int [line: 16]
.   .   .   Child: 0  Id aa: array of type int [line: 16]
.   .   Sibling: 9  Op [ : type int [line: 18]
.   .   .   Child: 0  Id a: type int [line: 18]
.   .   .   Child: 1  Id a: type int [line: 18]
.   .   Sibling: 10  Op [ : type int [line: 19]
.   .   .   Child: 0  Id a: type int [line: 19]
.   .   .   Child: 1  Id aa: array of type int [line: 19]
.   .   Sibling: 11  Op [ : type int [line: 20]
.   .   .   Child: 0  Id aa: array of type int [line: 20]
.   .   .   Child: 1  Id a: type int [line: 20]
.   .   Sibling: 12  Op [ : type int [line: 21]
.   .   .   Child: 0  Id aa: array of type int [line: 21]
.   .   .   Child: 1  Id aa: array of type int [line: 21]
.   .   Sibling: 13  Op * : type int [line: 23]
.   .   .   Child: 0  Id a: type int [line: 23]
.   .   Sibling: 14  Op * : type int [line: 24]
.   .   .   Child: 0  Id aa: array of type int [line: 24]
.   .   Sibling: 15  Op ? : type int [line: 25]
.   .   .   Child: 0  Id a: type int [line: 25]
.   .   Sibling: 16  Op ? : type int [line: 26]
.   .   .   Child: 0  Id aa: array of type int [line: 26]
.   .   Sibling: 17  Op ! : type bool [line: 27]
.   .   .   Child: 0  Id b: type bool [line: 27]
.   .   Sibling: 18  Op ! : type bool [line: 28]
.   .   .   Child: 0  Id bb: array of type bool [line: 28]
.   .   Sibling: 19  Assign ++ : type int [line: 29]
.   .   .   Child: 0  Id a: type int [line: 29]
.   .   Sibling: 20  Assign ++ : type int [line: 30]
.   .   .   Child: 0  Id aa: array of type int [line: 30]
.   .   Sibling: 21  Op + : type int [line: 32]
.   .   .   Child: 0  Id a: type int [line: 32]
.   .   .   Child: 1  Id a: type int [line: 32]
.   .   Sibling: 22  Op + : type int [line: 33]
.   .   .   Child: 0  Id a: type int [line: 33]
.   .   .   Child: 1  Id aa: array of type int [line: 33]
.   .   Sibling: 23  Op + : type int [line: 34]
.   .   .   Child: 0  Id aa: array of type int [line: 34]
.   .   .   Child: 1  Id a: type int [line: 34]
.   .   Sibling: 24  Op + : type int [line: 35]
.   .   .   Child: 0  Id aa: array of type int [line: 35]
.   .   .   Child: 1  Id aa: array of type int [line: 35]
.   .   Sibling: 25  Op & : type bool [line: 37]
.   .   .   Child: 0  Id b: type bool [line: 37]
.   .   .   Child: 1  Id b: type bool [line: 37]
.   .   Sibling: 26  Op & : type bool [line: 38]
.   .   .   Child: 0  Id b: type bool [line: 38]
.   .   .   Child: 1  Id bb: array of type bool [line: 38]
.   .   Sibling: 27  Op & : type bool [line: 39]
.   .   .   Child: 0  Id bb: array of type bool [line: 39]
.   .   .   Child: 1  Id b: type bool [line: 39]
.   .   Sibling: 28  Op & : type bool [line: 40]
.   .   .   Child: 0  Id bb: array of type bool [line: 40]
.   .   .   Child: 1  Id bb: array of type bool [line: 40]
.   .   Sibling: 29  Assign = : type char [line: 42]
.   .   .   Child: 0  Id c: type char [line: 42]
.   .   .   Child: 1  Op [ : type char [line: 42]
.   .   .   .   Child: 0  Id c: type char [line: 42]
.   .   .   .   Child: 1  Const 3 : type int [line: 42]
.   .   Sibling: 30  Assign = : type char [line: 43]
.   .   .   Child: 0  Id c: type char [line: 43]
.   .   .   Child: 1  Op [ : type char [line: 43]
.   .   .   .   Child: 0  Id cc: array of type char [line: 43]
.   .   .   .   Child: 1  Const 3 : type int [line: 43]
.   .   Sibling: 31  Assign = : array of type char [line: 44]
.   .   .   Child: 0  Id cc: array of type char [line: 44]
.   .   .   Child: 1  Op [ : type char [line: 44]
.   .   .   .   Child: 0  Id c: type char [line: 44]
.   .   .   .   Child: 1  Const 3 : type int [line: 44]
.   .   Sibling: 32  Assign = : array of type char [line: 45]
.   .   .   Child: 0  Id cc: array of type char [line: 45]
.   .   .   Child: 1  Op [ : type char [line: 45]
.   .   .   .   Child: 0  Id cc: array of type char [line: 45]
.   .   .   .   Child: 1  Const 3 : type int [line: 45]
.   .   Sibling: 33  Assign = : type char [line: 47]
.   .   .   Child: 0  Id c: type char [line: 47]
.   .   .   Child: 1  Const: 'a' : type char [line: 47]
.   .   Sibling: 34  Assign = : array of type char [line: 48]
.   .   .   Child: 0  Id cc: array of type char [line: 48]
.   .   .   Child: 1  Const: 'b' : type char [line: 48]
.   .   Sibling: 35  Assign = : type char [line: 49]
.   .   .   Child: 0  Op [ : type char [line: 49]
.   .   .   .   Child: 0  Id cc: array of type char [line: 49]
.   .   .   .   Child: 1  Const 0 : type int [line: 49]
.   .   .   Child: 1  Const: 'c' : type char [line: 49]
Number of warnings: 2
Number of errors: 22
