====================================
FILE: strange.c-
ERROR(20): Expecting Boolean test condition in if statement but got type int.
ERROR(22): Expecting Boolean test condition in if statement but got type int.
Func main: returns type void [line: 2]
.   Child: 0  Param x: type int [line: 2]
.   Child: 1  Compound [line: 3]
.   .   Child: 0  Var y: type int [line: 4]
.   .   Sibling: 1  Var z: array of type int [line: 5]
.   .   Child: 1  Assign = : type int [line: 7]
.   .   .   Child: 0  Id y: type int [line: 7]
.   .   .   Child: 1  Const 3 : type int [line: 7]
.   .   Sibling: 1  Call main: type void [line: 8]
.   .   .   Child: 0  Id y: type int [line: 8]
.   .   Sibling: 2  Assign ++ : type int [line: 9]
.   .   .   Child: 0  Id y: type int [line: 9]
.   .   Sibling: 3  Assign = : type int [line: 10]
.   .   .   Child: 0  Id x: type int [line: 10]
.   .   .   Child: 1  Assign = : type int [line: 10]
.   .   .   .   Child: 0  Id y: type int [line: 10]
.   .   .   .   Child: 1  Assign ++ : type int [line: 10]
.   .   .   .   .   Child: 0  Id y: type int [line: 10]
.   .   Sibling: 4  Op + : type int [line: 13]
.   .   .   Child: 0  Assign ++ : type int [line: 13]
.   .   .   .   Child: 0  Id y: type int [line: 13]
.   .   .   Child: 1  Const 1 : type int [line: 13]
.   .   Sibling: 5  Assign = : type int [line: 15]
.   .   .   Child: 0  Id y: type int [line: 15]
.   .   .   Child: 1  Assign ++ : type int [line: 15]
.   .   .   .   Child: 0  Id y: type int [line: 15]
.   .   Sibling: 6  Assign = : type int [line: 16]
.   .   .   Child: 0  Id y: type int [line: 16]
.   .   .   Child: 1  Op + : type int [line: 16]
.   .   .   .   Child: 0  Assign ++ : type int [line: 16]
.   .   .   .   .   Child: 0  Id y: type int [line: 16]
.   .   .   .   Child: 1  Const 1 : type int [line: 16]
.   .   Sibling: 7  Call main: type void [line: 17]
.   .   .   Child: 0  Assign ++ : type int [line: 17]
.   .   .   .   Child: 0  Id y: type int [line: 17]
.   .   Sibling: 8  If [line: 20]
.   .   .   Child: 0  Assign ++ : type int [line: 20]
.   .   .   .   Child: 0  Id y: type int [line: 20]
.   .   .   Child: 1  Assign = : type int [line: 20]
.   .   .   .   Child: 0  Id y: type int [line: 20]
.   .   .   .   Child: 1  Const 4 : type int [line: 20]
.   .   Sibling: 9  If [line: 22]
.   .   .   Child: 0  Assign = : type int [line: 22]
.   .   .   .   Child: 0  Id y: type int [line: 22]
.   .   .   .   Child: 1  Op + : type int [line: 22]
.   .   .   .   .   Child: 0  Id y: type int [line: 22]
.   .   .   .   .   Child: 1  Const 1 : type int [line: 22]
.   .   .   Child: 1  Assign = : type int [line: 22]
.   .   .   .   Child: 0  Id y: type int [line: 22]
.   .   .   .   Child: 1  Const 4 : type int [line: 22]
.   .   Sibling: 10  Assign = : type int [line: 23]
.   .   .   Child: 0  Op [ : type int [line: 23]
.   .   .   .   Child: 0  Id z: array of type int [line: 23]
.   .   .   .   Child: 1  Assign ++ : type int [line: 23]
.   .   .   .   .   Child: 0  Id y: type int [line: 23]
.   .   .   Child: 1  Const 6 : type int [line: 23]
.   .   Sibling: 11  Assign = : type int [line: 24]
.   .   .   Child: 0  Op [ : type int [line: 24]
.   .   .   .   Child: 0  Id z: array of type int [line: 24]
.   .   .   .   Child: 1  Assign = : type int [line: 24]
.   .   .   .   .   Child: 0  Id y: type int [line: 24]
.   .   .   .   .   Child: 1  Const 7 : type int [line: 24]
.   .   .   Child: 1  Const 6 : type int [line: 24]
Number of warnings: 0
Number of errors: 2
