====================================
FILE: oparray.c-
ERROR(12): Cannot use function 'main' as a variable.
ERROR(12): Cannot index nonarray 'main'.
WARNING(14): Variable xa may be uninitialized when used here.
WARNING(15): Variable ca may be uninitialized when used here.
WARNING(16): Variable ba may be uninitialized when used here.
ERROR(17): '=' requires operands of the same type but lhs is type int and rhs is type char.
ERROR(18): '=' requires operands of the same type but lhs is type int and rhs is type bool.
ERROR(19): '=' requires both operands be arrays or not but lhs is an array and rhs is not an array.
WARNING(21): Variable x may be uninitialized when used here.
ERROR(21): '=' requires both operands be arrays or not but lhs is an array and rhs is not an array.
WARNING(22): Variable c may be uninitialized when used here.
ERROR(22): '=' requires both operands be arrays or not but lhs is an array and rhs is not an array.
WARNING(23): Variable b may be uninitialized when used here.
ERROR(23): '=' requires both operands be arrays or not but lhs is an array and rhs is not an array.
ERROR(24): '=' requires operands of the same type but lhs is type int and rhs is type char.
ERROR(24): '=' requires both operands be arrays or not but lhs is an array and rhs is not an array.
ERROR(25): '=' requires operands of the same type but lhs is type int and rhs is type bool.
ERROR(25): '=' requires both operands be arrays or not but lhs is an array and rhs is not an array.
ERROR(27): '=' requires both operands be arrays or not but lhs is not an array and rhs is an array.
ERROR(28): '=' requires both operands be arrays or not but lhs is not an array and rhs is an array.
ERROR(29): '=' requires both operands be arrays or not but lhs is not an array and rhs is an array.
ERROR(30): '=' requires operands of the same type but lhs is type int and rhs is type char.
ERROR(30): '=' requires both operands be arrays or not but lhs is not an array and rhs is an array.
ERROR(31): '=' requires operands of the same type but lhs is type int and rhs is type bool.
ERROR(31): '=' requires both operands be arrays or not but lhs is not an array and rhs is an array.
ERROR(40): '>' requires both operands be arrays or not but lhs is an array and rhs is not an array.
ERROR(41): '>' requires both operands be arrays or not but lhs is not an array and rhs is an array.
ERROR(43): The operation '?' does not work with arrays.
ERROR(46): The operation '*' only works with arrays.
ERROR(47): Cannot index nonarray 'x'.
ERROR(48): Cannot index nonarray 'x'.
ERROR(48): The operation '*' only works with arrays.
ERROR(50): The operation '*' only works with arrays.
WARNING(10): The variable y seems not to be used.
WARNING(10): The variable ya seems not to be used.
Func main: returns type void [line: 2]
.   Child: 1  Compound [line: 3]
.   .   Child: 0  Var x: type int [line: 4]
.   .   Sibling: 1  Var c: type char [line: 5]
.   .   Sibling: 2  Var b: type bool [line: 6]
.   .   Sibling: 3  Var xa: array of type int [line: 7]
.   .   Sibling: 4  Var ca: array of type char [line: 8]
.   .   Sibling: 5  Var ba: array of type bool [line: 9]
.   .   Sibling: 6  Var y: type int [line: 10]
.   .   Sibling: 7  Var ya: array of type int [line: 10]
.   .   Child: 1  Op [ : undefined type [line: 12]
.   .   .   Child: 0  Id main: undefined type [line: 12]
.   .   .   Child: 1  Const 3 : type int [line: 12]
.   .   Sibling: 1  Assign = : array of type int [line: 14]
.   .   .   Child: 0  Id xa: array of type int [line: 14]
.   .   .   Child: 1  Id xa: array of type int [line: 14]
.   .   Sibling: 2  Assign = : array of type char [line: 15]
.   .   .   Child: 0  Id ca: array of type char [line: 15]
.   .   .   Child: 1  Id ca: array of type char [line: 15]
.   .   Sibling: 3  Assign = : array of type bool [line: 16]
.   .   .   Child: 0  Id ba: array of type bool [line: 16]
.   .   .   Child: 1  Id ba: array of type bool [line: 16]
.   .   Sibling: 4  Assign = : array of type int [line: 17]
.   .   .   Child: 0  Id xa: array of type int [line: 17]
.   .   .   Child: 1  Id ca: array of type char [line: 17]
.   .   Sibling: 5  Assign = : array of type int [line: 18]
.   .   .   Child: 0  Id xa: array of type int [line: 18]
.   .   .   Child: 1  Id ba: array of type bool [line: 18]
.   .   Sibling: 6  Assign = : array of type char [line: 19]
.   .   .   Child: 0  Id ca: array of type char [line: 19]
.   .   .   Child: 1  Const: 'z' : type char [line: 19]
.   .   Sibling: 7  Assign = : array of type int [line: 21]
.   .   .   Child: 0  Id xa: array of type int [line: 21]
.   .   .   Child: 1  Id x: type int [line: 21]
.   .   Sibling: 8  Assign = : array of type char [line: 22]
.   .   .   Child: 0  Id ca: array of type char [line: 22]
.   .   .   Child: 1  Id c: type char [line: 22]
.   .   Sibling: 9  Assign = : array of type bool [line: 23]
.   .   .   Child: 0  Id ba: array of type bool [line: 23]
.   .   .   Child: 1  Id b: type bool [line: 23]
.   .   Sibling: 10  Assign = : array of type int [line: 24]
.   .   .   Child: 0  Id xa: array of type int [line: 24]
.   .   .   Child: 1  Id c: type char [line: 24]
.   .   Sibling: 11  Assign = : array of type int [line: 25]
.   .   .   Child: 0  Id xa: array of type int [line: 25]
.   .   .   Child: 1  Id b: type bool [line: 25]
.   .   Sibling: 12  Assign = : type int [line: 27]
.   .   .   Child: 0  Id x: type int [line: 27]
.   .   .   Child: 1  Id xa: array of type int [line: 27]
.   .   Sibling: 13  Assign = : type char [line: 28]
.   .   .   Child: 0  Id c: type char [line: 28]
.   .   .   Child: 1  Id ca: array of type char [line: 28]
.   .   Sibling: 14  Assign = : type bool [line: 29]
.   .   .   Child: 0  Id b: type bool [line: 29]
.   .   .   Child: 1  Id ba: array of type bool [line: 29]
.   .   Sibling: 15  Assign = : type int [line: 30]
.   .   .   Child: 0  Id x: type int [line: 30]
.   .   .   Child: 1  Id ca: array of type char [line: 30]
.   .   Sibling: 16  Assign = : type int [line: 31]
.   .   .   Child: 0  Id x: type int [line: 31]
.   .   .   Child: 1  Id ba: array of type bool [line: 31]
.   .   Sibling: 17  Op > : type bool [line: 33]
.   .   .   Child: 0  Id xa: array of type int [line: 33]
.   .   .   Child: 1  Id xa: array of type int [line: 33]
.   .   Sibling: 18  Op < : type bool [line: 34]
.   .   .   Child: 0  Id xa: array of type int [line: 34]
.   .   .   Child: 1  Id xa: array of type int [line: 34]
.   .   Sibling: 19  Op >= : type bool [line: 35]
.   .   .   Child: 0  Id xa: array of type int [line: 35]
.   .   .   Child: 1  Id xa: array of type int [line: 35]
.   .   Sibling: 20  Op <= : type bool [line: 36]
.   .   .   Child: 0  Id xa: array of type int [line: 36]
.   .   .   Child: 1  Id xa: array of type int [line: 36]
.   .   Sibling: 21  Op == : type bool [line: 37]
.   .   .   Child: 0  Id xa: array of type int [line: 37]
.   .   .   Child: 1  Id xa: array of type int [line: 37]
.   .   Sibling: 22  Op != : type bool [line: 38]
.   .   .   Child: 0  Id xa: array of type int [line: 38]
.   .   .   Child: 1  Id xa: array of type int [line: 38]
.   .   Sibling: 23  Op > : type bool [line: 40]
.   .   .   Child: 0  Id xa: array of type int [line: 40]
.   .   .   Child: 1  Id x: type int [line: 40]
.   .   Sibling: 24  Op > : type bool [line: 41]
.   .   .   Child: 0  Id x: type int [line: 41]
.   .   .   Child: 1  Id xa: array of type int [line: 41]
.   .   Sibling: 25  Op ? : type int [line: 43]
.   .   .   Child: 0  Id xa: array of type int [line: 43]
.   .   Sibling: 26  Op * : type int [line: 44]
.   .   .   Child: 0  Id xa: array of type int [line: 44]
.   .   Sibling: 27  Op * : type int [line: 45]
.   .   .   Child: 0  Id ba: array of type bool [line: 45]
.   .   Sibling: 28  Op * : type int [line: 46]
.   .   .   Child: 0  Op * : type int [line: 46]
.   .   .   .   Child: 0  Id ba: array of type bool [line: 46]
.   .   Sibling: 29  Op [ : type int [line: 47]
.   .   .   Child: 0  Id x: type int [line: 47]
.   .   .   Child: 1  Const 2 : type int [line: 47]
.   .   Sibling: 30  Op * : type int [line: 48]
.   .   .   Child: 0  Op [ : type int [line: 48]
.   .   .   .   Child: 0  Id x: type int [line: 48]
.   .   .   .   Child: 1  Const 2 : type int [line: 48]
.   .   Sibling: 31  Op [ : type int [line: 49]
.   .   .   Child: 0  Id xa: array of type int [line: 49]
.   .   .   Child: 1  Const 2 : type int [line: 49]
.   .   Sibling: 32  Op * : type int [line: 50]
.   .   .   Child: 0  Op [ : type int [line: 50]
.   .   .   .   Child: 0  Id xa: array of type int [line: 50]
.   .   .   .   Child: 1  Const 2 : type int [line: 50]
Number of warnings: 8
Number of errors: 27
