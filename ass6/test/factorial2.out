====================================
RUN: factorial2.c-
Func factorial: returns type int [line: 3]
.   Child: 0  Param n: type int [mem: Param  size: 1  loc: -2] [line: 3]
.   Child: 1  Compound [line: 4]
.   .   Child: 0  Var i: type int [mem: Local  size: 1  loc: -3] [line: 5]
.   .   Sibling: 1  Var f: type int [mem: Local  size: 1  loc: -4] [line: 5]
.   .   Child: 1  Assign = : type int [line: 7]
.   .   .   Child: 0  Id f: type int [mem: Local  size: 1  loc: -4] [line: 7]
.   .   .   Child: 1  Assign = : type int [line: 7]
.   .   .   .   Child: 0  Id i: type int [mem: Local  size: 1  loc: -3] [line: 7]
.   .   .   .   Child: 1  Const 1 : type int [line: 7]
.   .   Sibling: 1  While [line: 8]
.   .   .   Child: 0  Op <= : type bool [line: 8]
.   .   .   .   Child: 0  Id i: type int [mem: Local  size: 1  loc: -3] [line: 8]
.   .   .   .   Child: 1  Id n: type int [mem: Param  size: 1  loc: -2] [line: 8]
.   .   .   Child: 1  Compound [line: 8]
.   .   .   .   Child: 1  Call output: type void [line: 9]
.   .   .   .   .   Child: 0  Id i: type int [mem: Local  size: 1  loc: -3] [line: 9]
.   .   .   .   Sibling: 1  Assign = : type int [line: 10]
.   .   .   .   .   Child: 0  Id f: type int [mem: Local  size: 1  loc: -4] [line: 10]
.   .   .   .   .   Child: 1  Op * : type int [line: 10]
.   .   .   .   .   .   Child: 0  Id f: type int [mem: Local  size: 1  loc: -4] [line: 10]
.   .   .   .   .   .   Child: 1  Id i: type int [mem: Local  size: 1  loc: -3] [line: 10]
.   .   .   .   Sibling: 2  Assign += : type int [line: 11]
.   .   .   .   .   Child: 0  Id i: type int [mem: Local  size: 1  loc: -3] [line: 11]
.   .   .   .   .   Child: 1  Const 1 : type int [line: 11]
.   .   Sibling: 2  Return [line: 14]
.   .   .   Child: 0  Id f: type int [mem: Local  size: 1  loc: -4] [line: 14]
Sibling: 1  Func main: returns type void [line: 17]
.   Child: 1  Compound [line: 18]
.   .   Child: 0  Var n: type int [mem: Local  size: 1  loc: -2] [line: 19]
.   .   Child: 1  Assign = : type int [line: 20]
.   .   .   Child: 0  Id n: type int [mem: Local  size: 1  loc: -2] [line: 20]
.   .   .   Child: 1  Call input: type int [line: 20]
.   .   Sibling: 1  Assign = : type int [line: 21]
.   .   .   Child: 0  Id n: type int [mem: Local  size: 1  loc: -2] [line: 21]
.   .   .   Child: 1  Call factorial: type int [line: 21]
.   .   .   .   Child: 0  Id n: type int [mem: Local  size: 1  loc: -2] [line: 21]
.   .   Sibling: 2  Call output: type void [line: 22]
.   .   .   Child: 0  Id n: type int [mem: Local  size: 1  loc: -2] [line: 22]
.   .   Sibling: 3  Call outnl: type void [line: 23]
Number of warnings: 0
Number of errors: 0
