====================================
RUN: control.c-
Func main: returns type void [line: 2]
.   Child: 1  Compound [line: 3]
.   .   Child: 0  Var x: type int [mem: Local  size: 1  loc: -2] [line: 4]
.   .   Child: 1  If [line: 6]
.   .   .   Child: 0  Op > : type bool [line: 6]
.   .   .   .   Child: 0  Const 6 : type int [line: 6]
.   .   .   .   Child: 1  Const 3 : type int [line: 6]
.   .   .   Child: 1  Compound [line: 6]
.   .   .   .   Child: 1  Assign = : type int [line: 7]
.   .   .   .   .   Child: 0  Id x: type int [mem: Local  size: 1  loc: -2] [line: 7]
.   .   .   .   .   Child: 1  Const 111 : type int [line: 7]
.   .   .   Child: 2  Compound [line: 9]
.   .   .   .   Child: 1  Assign = : type int [line: 10]
.   .   .   .   .   Child: 0  Id x: type int [mem: Local  size: 1  loc: -2] [line: 10]
.   .   .   .   .   Child: 1  Const 222 : type int [line: 10]
.   .   Sibling: 1  While [line: 13]
.   .   .   Child: 0  Op > : type bool [line: 13]
.   .   .   .   Child: 0  Const 7 : type int [line: 13]
.   .   .   .   Child: 1  Const 3 : type int [line: 13]
.   .   .   Child: 1  Compound [line: 13]
.   .   .   .   Child: 1  Assign = : type int [line: 14]
.   .   .   .   .   Child: 0  Id x: type int [mem: Local  size: 1  loc: -2] [line: 14]
.   .   .   .   .   Child: 1  Const 333 : type int [line: 14]
.   .   .   .   Sibling: 1  If [line: 15]
.   .   .   .   .   Child: 0  Op < : type bool [line: 15]
.   .   .   .   .   .   Child: 0  Id x: type int [mem: Local  size: 1  loc: -2] [line: 15]
.   .   .   .   .   .   Child: 1  Const 9 : type int [line: 15]
.   .   .   .   .   Child: 1  Break [line: 15]
.   .   .   .   Sibling: 2  Assign = : type int [line: 16]
.   .   .   .   .   Child: 0  Id x: type int [mem: Local  size: 1  loc: -2] [line: 16]
.   .   .   .   .   Child: 1  Const 444 : type int [line: 16]
.   .   .   .   Sibling: 3  Break [line: 17]
Number of warnings: 0
Number of errors: 0
