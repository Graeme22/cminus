====================================
RUN: gcd.c-
Func gcd: returns type int [line: 4]
.   Child: 0  Param u: type int [mem: Param  size: 1  loc: -2] [line: 4]
.   Sibling: 1  Param v: type int [mem: Param  size: 1  loc: -3] [line: 4]
.   Child: 1  Compound [line: 5]
.   .   Child: 1  If [line: 6]
.   .   .   Child: 0  Op == : type bool [line: 6]
.   .   .   .   Child: 0  Id v: type int [mem: Param  size: 1  loc: -3] [line: 6]
.   .   .   .   Child: 1  Const 0 : type int [line: 6]
.   .   .   Child: 1  Return [line: 7]
.   .   .   .   Child: 0  Id u: type int [mem: Param  size: 1  loc: -2] [line: 7]
.   .   .   Child: 2  Return [line: 9]
.   .   .   .   Child: 0  Call gcd: type int [line: 9]
.   .   .   .   .   Child: 0  Id v: type int [mem: Param  size: 1  loc: -3] [line: 9]
.   .   .   .   .   Sibling: 1  Op - : type int [line: 9]
.   .   .   .   .   .   Child: 0  Id u: type int [mem: Param  size: 1  loc: -2] [line: 9]
.   .   .   .   .   .   Child: 1  Op * : type int [line: 9]
.   .   .   .   .   .   .   Child: 0  Op / : type int [line: 9]
.   .   .   .   .   .   .   .   Child: 0  Id u: type int [mem: Param  size: 1  loc: -2] [line: 9]
.   .   .   .   .   .   .   .   Child: 1  Id v: type int [mem: Param  size: 1  loc: -3] [line: 9]
.   .   .   .   .   .   .   Child: 1  Id v: type int [mem: Param  size: 1  loc: -3] [line: 9]
Sibling: 1  Func main: returns type void [line: 12]
.   Child: 1  Compound [line: 13]
.   .   Child: 0  Var x: type int [mem: Local  size: 1  loc: -2] [line: 14]
.   .   Sibling: 1  Var y: type int [mem: Local  size: 1  loc: -3] [line: 14]
.   .   Sibling: 2  Var z: type int [mem: Local  size: 1  loc: -4] [line: 14]
.   .   Child: 1  Assign = : type int [line: 16]
.   .   .   Child: 0  Id x: type int [mem: Local  size: 1  loc: -2] [line: 16]
.   .   .   Child: 1  Call input: type int [line: 16]
.   .   Sibling: 1  Assign = : type int [line: 17]
.   .   .   Child: 0  Id y: type int [mem: Local  size: 1  loc: -3] [line: 17]
.   .   .   Child: 1  Call input: type int [line: 17]
.   .   Sibling: 2  Assign = : type int [line: 18]
.   .   .   Child: 0  Id z: type int [mem: Local  size: 1  loc: -4] [line: 18]
.   .   .   Child: 1  Call gcd: type int [line: 18]
.   .   .   .   Child: 0  Id x: type int [mem: Local  size: 1  loc: -2] [line: 18]
.   .   .   .   Sibling: 1  Id y: type int [mem: Local  size: 1  loc: -3] [line: 18]
.   .   Sibling: 3  Call output: type void [line: 19]
.   .   .   Child: 0  Id z: type int [mem: Local  size: 1  loc: -4] [line: 19]
.   .   Sibling: 4  Call outnl: type void [line: 20]
Number of warnings: 0
Number of errors: 0
