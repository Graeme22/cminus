====================================
RUN: overlay.c-
Func main: returns type void [line: 2]
.   Child: 1  Compound [line: 3]
.   .   Child: 0  Var z: type int [mem: Local  size: 1  loc: -2] [line: 4]
.   .   Child: 1  Assign = : type int [line: 5]
.   .   .   Child: 0  Id z: type int [mem: Local  size: 1  loc: -2] [line: 5]
.   .   .   Child: 1  Const 111 : type int [line: 5]
.   .   Sibling: 1  Compound [line: 6]
.   .   .   Child: 0  Var x: array of type int [mem: Local  size: 101  loc: -4] [line: 7]
.   .   .   Child: 1  Assign = : type int [line: 9]
.   .   .   .   Child: 0  Id z: type int [mem: Local  size: 1  loc: -2] [line: 9]
.   .   .   .   Child: 1  Const 0 : type int [line: 9]
.   .   .   Sibling: 1  While [line: 10]
.   .   .   .   Child: 0  Op < : type bool [line: 10]
.   .   .   .   .   Child: 0  Id z: type int [mem: Local  size: 1  loc: -2] [line: 10]
.   .   .   .   .   Child: 1  Const 100 : type int [line: 10]
.   .   .   .   Child: 1  Compound [line: 10]
.   .   .   .   .   Child: 1  Assign = : type int [line: 11]
.   .   .   .   .   .   Child: 0  Op [ : type int [line: 11]
.   .   .   .   .   .   .   Child: 0  Id x: array of type int [mem: Local  size: 101  loc: -4] [line: 11]
.   .   .   .   .   .   .   Child: 1  Id z: type int [mem: Local  size: 1  loc: -2] [line: 11]
.   .   .   .   .   .   Child: 1  Const 1 : type int [line: 11]
.   .   .   .   .   Sibling: 1  Assign ++ : type int [line: 12]
.   .   .   .   .   .   Child: 0  Id z: type int [mem: Local  size: 1  loc: -2] [line: 12]
.   .   Sibling: 2  Compound [line: 16]
.   .   .   Child: 0  Var y: array of type int [mem: Local  size: 101  loc: -4] [line: 17]
.   .   .   Child: 1  Assign = : type int [line: 19]
.   .   .   .   Child: 0  Id z: type int [mem: Local  size: 1  loc: -2] [line: 19]
.   .   .   .   Child: 1  Const 0 : type int [line: 19]
.   .   .   Sibling: 1  While [line: 20]
.   .   .   .   Child: 0  Op < : type bool [line: 20]
.   .   .   .   .   Child: 0  Id z: type int [mem: Local  size: 1  loc: -2] [line: 20]
.   .   .   .   .   Child: 1  Const 100 : type int [line: 20]
.   .   .   .   Child: 1  Compound [line: 20]
.   .   .   .   .   Child: 1  Assign = : type int [line: 21]
.   .   .   .   .   .   Child: 0  Op [ : type int [line: 21]
.   .   .   .   .   .   .   Child: 0  Id y: array of type int [mem: Local  size: 101  loc: -4] [line: 21]
.   .   .   .   .   .   .   Child: 1  Id z: type int [mem: Local  size: 1  loc: -2] [line: 21]
.   .   .   .   .   .   Child: 1  Const 1 : type int [line: 21]
.   .   .   .   .   Sibling: 1  Assign ++ : type int [line: 22]
.   .   .   .   .   .   Child: 0  Id z: type int [mem: Local  size: 1  loc: -2] [line: 22]
.   .   .   Sibling: 2  Call output: type void [line: 25]
.   .   .   .   Child: 0  Op [ : type int [line: 25]
.   .   .   .   .   Child: 0  Id y: array of type int [mem: Local  size: 101  loc: -4] [line: 25]
.   .   .   .   .   Child: 1  Const 1 : type int [line: 25]
.   .   .   Sibling: 3  Call outnl: type void [line: 25]
.   .   .   Sibling: 4  Assign = : type int [line: 26]
.   .   .   .   Child: 0  Op [ : type int [line: 26]
.   .   .   .   .   Child: 0  Id y: array of type int [mem: Local  size: 101  loc: -4] [line: 26]
.   .   .   .   .   Child: 1  Const 1 : type int [line: 26]
.   .   .   .   Child: 1  Const 333 : type int [line: 26]
.   .   .   Sibling: 5  Call output: type void [line: 27]
.   .   .   .   Child: 0  Op [ : type int [line: 27]
.   .   .   .   .   Child: 0  Id y: array of type int [mem: Local  size: 101  loc: -4] [line: 27]
.   .   .   .   .   Child: 1  Const 1 : type int [line: 27]
.   .   .   Sibling: 6  Call outnl: type void [line: 27]
.   .   Sibling: 3  Call output: type void [line: 29]
.   .   .   Child: 0  Id z: type int [mem: Local  size: 1  loc: -2] [line: 29]
.   .   Sibling: 4  Call outnl: type void [line: 29]
Number of warnings: 0
Number of errors: 0
