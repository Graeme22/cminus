====================================
RUN: tinyCall.c-
Func cheyenne: returns type void [line: 2]
.   Child: 0  Param a: type int [mem: Param  size: 1  loc: -2] [line: 2]
.   Sibling: 1  Param b: type bool [mem: Param  size: 1  loc: -3] [line: 2]
.   Sibling: 2  Param c: type char [mem: Param  size: 1  loc: -4] [line: 2]
.   Child: 1  Compound [line: 3]
.   .   Child: 1  Call output: type void [line: 4]
.   .   .   Child: 0  Id a: type int [mem: Param  size: 1  loc: -2] [line: 4]
.   .   Sibling: 1  Call outputb: type void [line: 5]
.   .   .   Child: 0  Id b: type bool [mem: Param  size: 1  loc: -3] [line: 5]
.   .   Sibling: 2  Call outputc: type void [line: 6]
.   .   .   Child: 0  Id c: type char [mem: Param  size: 1  loc: -4] [line: 6]
.   .   Sibling: 3  Call outnl: type void [line: 7]
Sibling: 1  Func sioux: returns type void [line: 11]
.   Child: 0  Param a: array of type int [mem: Param  size: 1  loc: -2] [line: 11]
.   Sibling: 1  Param b: array of type bool [mem: Param  size: 1  loc: -3] [line: 11]
.   Sibling: 2  Param c: array of type char [mem: Param  size: 1  loc: -4] [line: 11]
.   Child: 1  Compound [line: 12]
.   .   Child: 1  Call output: type void [line: 13]
.   .   .   Child: 0  Op [ : type int [line: 13]
.   .   .   .   Child: 0  Id a: array of type int [mem: Param  size: 1  loc: -2] [line: 13]
.   .   .   .   Child: 1  Const 1 : type int [line: 13]
.   .   Sibling: 1  Call outputb: type void [line: 14]
.   .   .   Child: 0  Op [ : type bool [line: 14]
.   .   .   .   Child: 0  Id b: array of type bool [mem: Param  size: 1  loc: -3] [line: 14]
.   .   .   .   Child: 1  Const 2 : type int [line: 14]
.   .   Sibling: 2  Call outputc: type void [line: 15]
.   .   .   Child: 0  Op [ : type char [line: 15]
.   .   .   .   Child: 0  Id c: array of type char [mem: Param  size: 1  loc: -4] [line: 15]
.   .   .   .   Child: 1  Const 3 : type int [line: 15]
.   .   Sibling: 3  Call outnl: type void [line: 16]
Sibling: 2  Func comanche: returns type void [line: 20]
.   Child: 0  Param z: array of type int [mem: Param  size: 1  loc: -2] [line: 20]
.   Child: 1  Compound [line: 21]
.   .   Child: 0  Var b: array of type bool [mem: Local  size: 6  loc: -4] [line: 22]
.   .   Sibling: 1  Var c: array of type char [mem: Local  size: 6  loc: -10] [line: 23]
.   .   Child: 1  Assign = : type bool [line: 25]
.   .   .   Child: 0  Op [ : type bool [line: 25]
.   .   .   .   Child: 0  Id b: array of type bool [mem: Local  size: 6  loc: -4] [line: 25]
.   .   .   .   Child: 1  Const 2 : type int [line: 25]
.   .   .   Child: 1  Const true : type bool [line: 25]
.   .   Sibling: 1  Assign = : type char [line: 26]
.   .   .   Child: 0  Op [ : type char [line: 26]
.   .   .   .   Child: 0  Id c: array of type char [mem: Local  size: 6  loc: -10] [line: 26]
.   .   .   .   Child: 1  Const 3 : type int [line: 26]
.   .   .   Child: 1  Const: 'z' : type char [line: 26]
.   .   Sibling: 2  Call sioux: type void [line: 27]
.   .   .   Child: 0  Id z: array of type int [mem: Param  size: 1  loc: -2] [line: 27]
.   .   .   Sibling: 1  Id b: array of type bool [mem: Local  size: 6  loc: -4] [line: 27]
.   .   .   Sibling: 2  Id c: array of type char [mem: Local  size: 6  loc: -10] [line: 27]
Sibling: 3  Var ga: array of type int [mem: Global  size: 6  loc: -1] [line: 32]
Sibling: 4  Var gb: array of type bool [mem: Global  size: 7  loc: -7] [line: 33]
Sibling: 5  Var gc: array of type char [mem: Global  size: 8  loc: -14] [line: 34]
Sibling: 6  Func main: returns type void [line: 36]
.   Child: 1  Compound [line: 37]
.   .   Child: 0  Var a: array of type int [mem: Local  size: 6  loc: -3] [line: 38]
.   .   Sibling: 1  Var b: array of type bool [mem: Local  size: 7  loc: -9] [line: 39]
.   .   Sibling: 2  Var c: array of type char [mem: Local  size: 8  loc: -16] [line: 40]
.   .   Child: 1  Assign = : type int [line: 42]
.   .   .   Child: 0  Op [ : type int [line: 42]
.   .   .   .   Child: 0  Id a: array of type int [mem: Local  size: 6  loc: -3] [line: 42]
.   .   .   .   Child: 1  Const 1 : type int [line: 42]
.   .   .   Child: 1  Const 555 : type int [line: 42]
.   .   Sibling: 1  Assign = : type bool [line: 43]
.   .   .   Child: 0  Op [ : type bool [line: 43]
.   .   .   .   Child: 0  Id b: array of type bool [mem: Local  size: 7  loc: -9] [line: 43]
.   .   .   .   Child: 1  Const 2 : type int [line: 43]
.   .   .   Child: 1  Const true : type bool [line: 43]
.   .   Sibling: 2  Assign = : type char [line: 44]
.   .   .   Child: 0  Op [ : type char [line: 44]
.   .   .   .   Child: 0  Id c: array of type char [mem: Local  size: 8  loc: -16] [line: 44]
.   .   .   .   Child: 1  Const 3 : type int [line: 44]
.   .   .   Child: 1  Const: 'z' : type char [line: 44]
.   .   Sibling: 3  Call cheyenne: type void [line: 45]
.   .   .   Child: 0  Const 666 : type int [line: 45]
.   .   .   Sibling: 1  Const true : type bool [line: 45]
.   .   .   Sibling: 2  Const: 'c' : type char [line: 45]
.   .   Sibling: 4  Call cheyenne: type void [line: 46]
.   .   .   Child: 0  Const 777 : type int [line: 46]
.   .   .   Sibling: 1  Const false : type bool [line: 46]
.   .   .   Sibling: 2  Const: 'd' : type char [line: 46]
.   .   Sibling: 5  Call sioux: type void [line: 47]
.   .   .   Child: 0  Id a: array of type int [mem: Local  size: 6  loc: -3] [line: 47]
.   .   .   Sibling: 1  Id b: array of type bool [mem: Local  size: 7  loc: -9] [line: 47]
.   .   .   Sibling: 2  Id c: array of type char [mem: Local  size: 8  loc: -16] [line: 47]
.   .   Sibling: 6  Call comanche: type void [line: 48]
.   .   .   Child: 0  Id a: array of type int [mem: Local  size: 6  loc: -3] [line: 48]
.   .   Sibling: 7  Assign = : type int [line: 50]
.   .   .   Child: 0  Op [ : type int [line: 50]
.   .   .   .   Child: 0  Id ga: array of type int [mem: Global  size: 6  loc: -1] [line: 50]
.   .   .   .   Child: 1  Const 1 : type int [line: 50]
.   .   .   Child: 1  Const 888 : type int [line: 50]
.   .   Sibling: 8  Assign = : type bool [line: 51]
.   .   .   Child: 0  Op [ : type bool [line: 51]
.   .   .   .   Child: 0  Id gb: array of type bool [mem: Global  size: 7  loc: -7] [line: 51]
.   .   .   .   Child: 1  Const 2 : type int [line: 51]
.   .   .   Child: 1  Const false : type bool [line: 51]
.   .   Sibling: 9  Assign = : type char [line: 52]
.   .   .   Child: 0  Op [ : type char [line: 52]
.   .   .   .   Child: 0  Id gc: array of type char [mem: Global  size: 8  loc: -14] [line: 52]
.   .   .   .   Child: 1  Const 3 : type int [line: 52]
.   .   .   Child: 1  Const: 'g' : type char [line: 52]
.   .   Sibling: 10  Call sioux: type void [line: 53]
.   .   .   Child: 0  Id ga: array of type int [mem: Global  size: 6  loc: -1] [line: 53]
.   .   .   Sibling: 1  Id gb: array of type bool [mem: Global  size: 7  loc: -7] [line: 53]
.   .   .   Sibling: 2  Id gc: array of type char [mem: Global  size: 8  loc: -14] [line: 53]
.   .   Sibling: 11  Call comanche: type void [line: 54]
.   .   .   Child: 0  Id ga: array of type int [mem: Global  size: 6  loc: -1] [line: 54]
.   .   Sibling: 12  Compound [line: 56]
.   .   .   Child: 0  Var ga: static array of type int [mem: Static  size: 6  loc: -22] [line: 57]
.   .   .   Sibling: 1  Var gb: static array of type bool [mem: Static  size: 7  loc: -28] [line: 58]
.   .   .   Sibling: 2  Var gc: static array of type char [mem: Static  size: 8  loc: -35] [line: 59]
.   .   .   Child: 1  Assign = : type int [line: 60]
.   .   .   .   Child: 0  Op [ : type int [line: 60]
.   .   .   .   .   Child: 0  Id ga: static array of type int [mem: Static  size: 6  loc: -22] [line: 60]
.   .   .   .   .   Child: 1  Const 1 : type int [line: 60]
.   .   .   .   Child: 1  Const 999 : type int [line: 60]
.   .   .   Sibling: 1  Assign = : type bool [line: 61]
.   .   .   .   Child: 0  Op [ : type bool [line: 61]
.   .   .   .   .   Child: 0  Id gb: static array of type bool [mem: Static  size: 7  loc: -28] [line: 61]
.   .   .   .   .   Child: 1  Const 2 : type int [line: 61]
.   .   .   .   Child: 1  Const true : type bool [line: 61]
.   .   .   Sibling: 2  Assign = : type char [line: 62]
.   .   .   .   Child: 0  Op [ : type char [line: 62]
.   .   .   .   .   Child: 0  Id gc: static array of type char [mem: Static  size: 8  loc: -35] [line: 62]
.   .   .   .   .   Child: 1  Const 3 : type int [line: 62]
.   .   .   .   Child: 1  Const: 's' : type char [line: 62]
.   .   .   Sibling: 3  Call sioux: type void [line: 64]
.   .   .   .   Child: 0  Id ga: static array of type int [mem: Static  size: 6  loc: -22] [line: 64]
.   .   .   .   Sibling: 1  Id gb: static array of type bool [mem: Static  size: 7  loc: -28] [line: 64]
.   .   .   .   Sibling: 2  Id gc: static array of type char [mem: Static  size: 8  loc: -35] [line: 64]
.   .   .   Sibling: 4  Call comanche: type void [line: 65]
.   .   .   .   Child: 0  Id ga: static array of type int [mem: Static  size: 6  loc: -22] [line: 65]
Number of warnings: 0
Number of errors: 0
