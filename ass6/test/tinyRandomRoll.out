====================================
RUN: tinyRandomRoll.c-
Func main: returns type void [line: 2]
.   Child: 1  Compound [line: 3]
.   .   Child: 0  Var i: type int [mem: Local  size: 1  loc: -2] [line: 4]
.   .   Sibling: 1  Var sum: type int [mem: Local  size: 1  loc: -3] [line: 4]
.   .   Child: 1  Assign = : type int [line: 6]
.   .   .   Child: 0  Id i: type int [mem: Local  size: 1  loc: -2] [line: 6]
.   .   .   Child: 1  Assign = : type int [line: 6]
.   .   .   .   Child: 0  Id sum: type int [mem: Local  size: 1  loc: -3] [line: 6]
.   .   .   .   Child: 1  Const 0 : type int [line: 6]
.   .   Sibling: 1  While [line: 7]
.   .   .   Child: 0  Op < : type bool [line: 7]
.   .   .   .   Child: 0  Id i: type int [mem: Local  size: 1  loc: -2] [line: 7]
.   .   .   .   Child: 1  Const 1000 : type int [line: 7]
.   .   .   Child: 1  Compound [line: 7]
.   .   .   .   Child: 1  Assign += : type int [line: 8]
.   .   .   .   .   Child: 0  Id sum: type int [mem: Local  size: 1  loc: -3] [line: 8]
.   .   .   .   .   Child: 1  Op ? : type int [line: 8]
.   .   .   .   .   .   Child: 0  Const 6 : type int [line: 8]
.   .   .   .   Sibling: 1  Assign ++ : type int [line: 9]
.   .   .   .   .   Child: 0  Id i: type int [mem: Local  size: 1  loc: -2] [line: 9]
.   .   Sibling: 2  Call outputb: type void [line: 11]
.   .   .   Child: 0  Const true : type bool [line: 11]
.   .   Sibling: 3  Call outputb: type void [line: 13]
.   .   .   Child: 0  Op & : type bool [line: 13]
.   .   .   .   Child: 0  Op < : type bool [line: 13]
.   .   .   .   .   Child: 0  Const 2300 : type int [line: 13]
.   .   .   .   .   Child: 1  Id sum: type int [mem: Local  size: 1  loc: -3] [line: 13]
.   .   .   .   Child: 1  Op < : type bool [line: 13]
.   .   .   .   .   Child: 0  Id sum: type int [mem: Local  size: 1  loc: -3] [line: 13]
.   .   .   .   .   Child: 1  Const 2700 : type int [line: 13]
.   .   Sibling: 4  Call outnl: type void [line: 14]
.   .   Sibling: 5  Call outputb: type void [line: 16]
.   .   .   Child: 0  Op < : type bool [line: 16]
.   .   .   .   Child: 0  Op ? : type int [line: 16]
.   .   .   .   .   Child: 0  Const 3 : type int [line: 16]
.   .   .   .   Child: 1  Const 3 : type int [line: 16]
.   .   Sibling: 6  Call outnl: type void [line: 17]
Number of warnings: 0
Number of errors: 0
