====================================
RUN: callglobal.c-
Func scalar: returns type void [line: 2]
.   Child: 0  Param a: type int [mem: Param  size: 1  loc: -2] [line: 2]
.   Sibling: 1  Param b: type bool [mem: Param  size: 1  loc: -3] [line: 2]
.   Sibling: 2  Param c: type char [mem: Param  size: 1  loc: -4] [line: 2]
.   Child: 1  Compound [line: 3]
.   .   Child: 1  Call output: type void [line: 4]
.   .   .   Child: 0  Id a: type int [mem: Param  size: 1  loc: -2] [line: 4]
.   .   Sibling: 1  Call outputb: type void [line: 5]
.   .   .   Child: 0  Id b: type bool [mem: Param  size: 1  loc: -3] [line: 5]
.   .   Sibling: 2  Call outputc: type void [line: 6]
.   .   .   Child: 0  Id c: type char [mem: Param  size: 1  loc: -4] [line: 6]
.   .   Sibling: 3  Call outnl: type void [line: 7]
Sibling: 1  Func array: returns type void [line: 11]
.   Child: 0  Param a: array of type int [mem: Param  size: 1  loc: -2] [line: 11]
.   Sibling: 1  Param b: array of type bool [mem: Param  size: 1  loc: -3] [line: 11]
.   Sibling: 2  Param c: array of type char [mem: Param  size: 1  loc: -4] [line: 11]
.   Child: 1  Compound [line: 12]
.   .   Child: 1  Call output: type void [line: 13]
.   .   .   Child: 0  Op [ : type int [line: 13]
.   .   .   .   Child: 0  Id a: array of type int [mem: Param  size: 1  loc: -2] [line: 13]
.   .   .   .   Child: 1  Const 1 : type int [line: 13]
.   .   Sibling: 1  Call outputb: type void [line: 14]
.   .   .   Child: 0  Op [ : type bool [line: 14]
.   .   .   .   Child: 0  Id b: array of type bool [mem: Param  size: 1  loc: -3] [line: 14]
.   .   .   .   Child: 1  Const 2 : type int [line: 14]
.   .   Sibling: 2  Call outputc: type void [line: 15]
.   .   .   Child: 0  Op [ : type char [line: 15]
.   .   .   .   Child: 0  Id c: array of type char [mem: Param  size: 1  loc: -4] [line: 15]
.   .   .   .   Child: 1  Const 3 : type int [line: 15]
.   .   Sibling: 3  Call outnl: type void [line: 16]
Sibling: 2  Var x: type int [mem: Global  size: 1  loc: 0] [line: 20]
Sibling: 3  Var y: type bool [mem: Global  size: 1  loc: -1] [line: 20]
Sibling: 4  Var z: type char [mem: Global  size: 1  loc: -2] [line: 20]
Sibling: 5  Var XX: array of type int [mem: Global  size: 4  loc: -4] [line: 21]
Sibling: 6  Var YY: array of type bool [mem: Global  size: 6  loc: -8] [line: 21]
Sibling: 7  Var ZZ: array of type char [mem: Global  size: 8  loc: -14] [line: 21]
Sibling: 8  Func main: returns type void [line: 23]
.   Child: 1  Compound [line: 24]
.   .   Child: 1  Assign = : type int [line: 25]
.   .   .   Child: 0  Id x: type int [mem: Global  size: 1  loc: 0] [line: 25]
.   .   .   Child: 1  Const 333 : type int [line: 25]
.   .   Sibling: 1  Assign = : type bool [line: 26]
.   .   .   Child: 0  Id y: type bool [mem: Global  size: 1  loc: -1] [line: 26]
.   .   .   Child: 1  Const true : type bool [line: 26]
.   .   Sibling: 2  Assign = : type char [line: 27]
.   .   .   Child: 0  Id z: type char [mem: Global  size: 1  loc: -2] [line: 27]
.   .   .   Child: 1  Const: 'z' : type char [line: 27]
.   .   Sibling: 3  Assign = : type int [line: 29]
.   .   .   Child: 0  Op [ : type int [line: 29]
.   .   .   .   Child: 0  Id XX: array of type int [mem: Global  size: 4  loc: -4] [line: 29]
.   .   .   .   Child: 1  Const 1 : type int [line: 29]
.   .   .   Child: 1  Const 444 : type int [line: 29]
.   .   Sibling: 4  Assign = : type bool [line: 30]
.   .   .   Child: 0  Op [ : type bool [line: 30]
.   .   .   .   Child: 0  Id YY: array of type bool [mem: Global  size: 6  loc: -8] [line: 30]
.   .   .   .   Child: 1  Const 2 : type int [line: 30]
.   .   .   Child: 1  Const false : type bool [line: 30]
.   .   Sibling: 5  Assign = : type char [line: 31]
.   .   .   Child: 0  Op [ : type char [line: 31]
.   .   .   .   Child: 0  Id ZZ: array of type char [mem: Global  size: 8  loc: -14] [line: 31]
.   .   .   .   Child: 1  Const 3 : type int [line: 31]
.   .   .   Child: 1  Const: 'a' : type char [line: 31]
.   .   Sibling: 6  Call scalar: type void [line: 33]
.   .   .   Child: 0  Id x: type int [mem: Global  size: 1  loc: 0] [line: 33]
.   .   .   Sibling: 1  Id y: type bool [mem: Global  size: 1  loc: -1] [line: 33]
.   .   .   Sibling: 2  Id z: type char [mem: Global  size: 1  loc: -2] [line: 33]
.   .   Sibling: 7  Call array: type void [line: 34]
.   .   .   Child: 0  Id XX: array of type int [mem: Global  size: 4  loc: -4] [line: 34]
.   .   .   Sibling: 1  Id YY: array of type bool [mem: Global  size: 6  loc: -8] [line: 34]
.   .   .   Sibling: 2  Id ZZ: array of type char [mem: Global  size: 8  loc: -14] [line: 34]
Number of warnings: 0
Number of errors: 0
