====================================
RUN: io.c-
WARNING(9): The variable s seems not to be used.
Func main: returns type void [line: 4]
.   Child: 1  Compound [line: 5]
.   .   Child: 0  Var x: type int [mem: Local  size: 1  loc: -2] [line: 6]
.   .   Sibling: 1  Var b: type bool [mem: Local  size: 1  loc: -3] [line: 7]
.   .   Sibling: 2  Var c: type char [mem: Local  size: 1  loc: -4] [line: 8]
.   .   Sibling: 3  Var s: array of type char [mem: Local  size: 11  loc: -6] [line: 9]
.   .   Child: 1  Call output: type void [line: 11]
.   .   .   Child: 0  Const 777 : type int [line: 11]
.   .   Sibling: 1  Call outputb: type void [line: 12]
.   .   .   Child: 0  Const false : type bool [line: 12]
.   .   Sibling: 2  Call outputc: type void [line: 13]
.   .   .   Child: 0  Const: 'a' : type char [line: 13]
.   .   Sibling: 3  Call outnl: type void [line: 15]
.   .   Sibling: 4  Assign = : type int [line: 17]
.   .   .   Child: 0  Id x: type int [mem: Local  size: 1  loc: -2] [line: 17]
.   .   .   Child: 1  Const 666 : type int [line: 17]
.   .   Sibling: 5  Call output: type void [line: 18]
.   .   .   Child: 0  Id x: type int [mem: Local  size: 1  loc: -2] [line: 18]
.   .   Sibling: 6  Call outnl: type void [line: 19]
.   .   Sibling: 7  Call output: type void [line: 21]
.   .   .   Child: 0  Op - : type int [line: 21]
.   .   .   .   Child: 0  Id x: type int [mem: Local  size: 1  loc: -2] [line: 21]
.   .   Sibling: 8  Call output: type void [line: 22]
.   .   .   Child: 0  Op * : type int [line: 22]
.   .   .   .   Child: 0  Op - : type int [line: 22]
.   .   .   .   .   Child: 0  Const 1 : type int [line: 22]
.   .   .   .   Child: 1  Id x: type int [mem: Local  size: 1  loc: -2] [line: 22]
.   .   Sibling: 9  Call outnl: type void [line: 23]
.   .   Sibling: 10  Call output: type void [line: 25]
.   .   .   Child: 0  Op + : type int [line: 25]
.   .   .   .   Child: 0  Op + : type int [line: 25]
.   .   .   .   .   Child: 0  Const 111 : type int [line: 25]
.   .   .   .   .   Child: 1  Const 222 : type int [line: 25]
.   .   .   .   Child: 1  Const 333 : type int [line: 25]
.   .   Sibling: 11  Call output: type void [line: 26]
.   .   .   Child: 0  Op * : type int [line: 26]
.   .   .   .   Child: 0  Op * : type int [line: 26]
.   .   .   .   .   Child: 0  Const 3 : type int [line: 26]
.   .   .   .   .   Child: 1  Const 6 : type int [line: 26]
.   .   .   .   Child: 1  Op + : type int [line: 26]
.   .   .   .   .   Child: 0  Op * : type int [line: 26]
.   .   .   .   .   .   Child: 0  Const 6 : type int [line: 26]
.   .   .   .   .   .   Child: 1  Const 6 : type int [line: 26]
.   .   .   .   .   Child: 1  Const 1 : type int [line: 26]
.   .   Sibling: 12  Call outnl: type void [line: 27]
.   .   Sibling: 13  Assign = : type int [line: 29]
.   .   .   Child: 0  Id x: type int [mem: Local  size: 1  loc: -2] [line: 29]
.   .   .   Child: 1  Call input: type int [line: 29]
.   .   Sibling: 14  Call output: type void [line: 30]
.   .   .   Child: 0  Id x: type int [mem: Local  size: 1  loc: -2] [line: 30]
.   .   Sibling: 15  Call outnl: type void [line: 31]
.   .   Sibling: 16  Assign = : type bool [line: 33]
.   .   .   Child: 0  Id b: type bool [mem: Local  size: 1  loc: -3] [line: 33]
.   .   .   Child: 1  Call inputb: type bool [line: 33]
.   .   Sibling: 17  Call outputb: type void [line: 34]
.   .   .   Child: 0  Id b: type bool [mem: Local  size: 1  loc: -3] [line: 34]
.   .   Sibling: 18  Call outnl: type void [line: 35]
.   .   Sibling: 19  Assign = : type char [line: 37]
.   .   .   Child: 0  Id c: type char [mem: Local  size: 1  loc: -4] [line: 37]
.   .   .   Child: 1  Call inputc: type char [line: 37]
.   .   Sibling: 20  Call outputc: type void [line: 38]
.   .   .   Child: 0  Id c: type char [mem: Local  size: 1  loc: -4] [line: 38]
.   .   Sibling: 21  Call outnl: type void [line: 39]
.   .   Sibling: 22  Call output: type void [line: 41]
.   .   .   Child: 0  Op * : type int [line: 41]
.   .   .   .   Child: 0  Call input: type int [line: 41]
.   .   .   .   Child: 1  Call input: type int [line: 41]
.   .   Sibling: 23  Call outnl: type void [line: 42]
.   .   Sibling: 24  Call outputb: type void [line: 44]
.   .   .   Child: 0  Op & : type bool [line: 44]
.   .   .   .   Child: 0  Call inputb: type bool [line: 44]
.   .   .   .   Child: 1  Call inputb: type bool [line: 44]
.   .   Sibling: 25  Call outnl: type void [line: 45]
.   .   Sibling: 26  Call outputc: type void [line: 47]
.   .   .   Child: 0  Call inputc: type char [line: 47]
.   .   Sibling: 27  Call outnl: type void [line: 48]
Number of warnings: 1
Number of errors: 0
