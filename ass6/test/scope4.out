====================================
RUN: scope4.c-
WARNING(25): The variable pa seems not to be used.
WARNING(25): The variable paa seems not to be used.
Var a: type int [mem: Global  size: 1  loc: 0] [line: 2]
Sibling: 1  Var aa: array of type int [mem: Global  size: 12  loc: -2] [line: 3]
Sibling: 2  Func fox: returns type void [line: 5]
.   Child: 0  Param fpa: type int [mem: Param  size: 1  loc: -2] [line: 5]
.   Sibling: 1  Param fpaa: array of type int [mem: Param  size: 1  loc: -3] [line: 5]
.   Child: 1  Compound [line: 6]
.   .   Child: 1  Call output: type void [line: 7]
.   .   .   Child: 0  Id fpa: type int [mem: Param  size: 1  loc: -2] [line: 7]
.   .   Sibling: 1  Call output: type void [line: 8]
.   .   .   Child: 0  Op * : type int [line: 8]
.   .   .   .   Child: 0  Id fpaa: array of type int [mem: Param  size: 1  loc: -3] [line: 8]
.   .   Sibling: 2  Call output: type void [line: 9]
.   .   .   Child: 0  Op [ : type int [line: 9]
.   .   .   .   Child: 0  Id fpaa: array of type int [mem: Param  size: 1  loc: -3] [line: 9]
.   .   .   .   Child: 1  Const 0 : type int [line: 9]
.   .   Sibling: 3  Call output: type void [line: 10]
.   .   .   Child: 0  Op [ : type int [line: 10]
.   .   .   .   Child: 0  Id fpaa: array of type int [mem: Param  size: 1  loc: -3] [line: 10]
.   .   .   .   Child: 1  Op - : type int [line: 10]
.   .   .   .   .   Child: 0  Op * : type int [line: 10]
.   .   .   .   .   .   Child: 0  Id fpaa: array of type int [mem: Param  size: 1  loc: -3] [line: 10]
.   .   .   .   .   Child: 1  Const 1 : type int [line: 10]
.   .   Sibling: 4  Call outnl: type void [line: 11]
Sibling: 3  Func bat: returns type void [line: 15]
.   Child: 0  Param fpa: type int [mem: Param  size: 1  loc: -2] [line: 15]
.   Sibling: 1  Param fpaa: array of type int [mem: Param  size: 1  loc: -3] [line: 15]
.   Child: 1  Compound [line: 16]
.   .   Child: 1  Call outputc: type void [line: 17]
.   .   .   Child: 0  Const: 'B' : type char [line: 17]
.   .   Sibling: 1  Call fox: type void [line: 18]
.   .   .   Child: 0  Id fpa: type int [mem: Param  size: 1  loc: -2] [line: 18]
.   .   .   Sibling: 1  Id fpaa: array of type int [mem: Param  size: 1  loc: -3] [line: 18]
Sibling: 4  Func th: returns type int [line: 21]
.   Child: 0  Param fpa: type int [mem: Param  size: 1  loc: -2] [line: 21]
.   Child: 1  Return [line: 21]
.   .   Child: 0  Op + : type int [line: 21]
.   .   .   Child: 0  Const 1000 : type int [line: 21]
.   .   .   Child: 1  Id fpa: type int [mem: Param  size: 1  loc: -2] [line: 21]
Sibling: 5  Func tha: returns type int [line: 23]
.   Child: 0  Param fpaa: array of type int [mem: Param  size: 1  loc: -2] [line: 23]
.   Child: 1  Return [line: 23]
.   .   Child: 0  Op + : type int [line: 23]
.   .   .   Child: 0  Const 1000 : type int [line: 23]
.   .   .   Child: 1  Op [ : type int [line: 23]
.   .   .   .   Child: 0  Id fpaa: array of type int [mem: Param  size: 1  loc: -2] [line: 23]
.   .   .   .   Child: 1  Const 0 : type int [line: 23]
Sibling: 6  Func main: returns type void [line: 25]
.   Child: 0  Param pa: type int [mem: Param  size: 1  loc: -2] [line: 25]
.   Sibling: 1  Param paa: array of type int [mem: Param  size: 1  loc: -3] [line: 25]
.   Child: 1  Compound [line: 26]
.   .   Child: 0  Var b: type int [mem: Local  size: 1  loc: -4] [line: 27]
.   .   Sibling: 1  Var bb: array of type int [mem: Local  size: 12  loc: -6] [line: 28]
.   .   Child: 1  Assign = : type int [line: 30]
.   .   .   Child: 0  Id a: type int [mem: Global  size: 1  loc: 0] [line: 30]
.   .   .   Child: 1  Const 111 : type int [line: 30]
.   .   Sibling: 1  Assign = : type int [line: 31]
.   .   .   Child: 0  Op [ : type int [line: 31]
.   .   .   .   Child: 0  Id aa: array of type int [mem: Global  size: 12  loc: -2] [line: 31]
.   .   .   .   Child: 1  Const 0 : type int [line: 31]
.   .   .   Child: 1  Const 110 : type int [line: 31]
.   .   Sibling: 2  Assign = : type int [line: 32]
.   .   .   Child: 0  Op [ : type int [line: 32]
.   .   .   .   Child: 0  Id aa: array of type int [mem: Global  size: 12  loc: -2] [line: 32]
.   .   .   .   Child: 1  Const 10 : type int [line: 32]
.   .   .   Child: 1  Const 112 : type int [line: 32]
.   .   Sibling: 3  Assign = : type int [line: 34]
.   .   .   Child: 0  Id b: type int [mem: Local  size: 1  loc: -4] [line: 34]
.   .   .   Child: 1  Const 222 : type int [line: 34]
.   .   Sibling: 4  Assign = : type int [line: 35]
.   .   .   Child: 0  Op [ : type int [line: 35]
.   .   .   .   Child: 0  Id bb: array of type int [mem: Local  size: 12  loc: -6] [line: 35]
.   .   .   .   Child: 1  Const 0 : type int [line: 35]
.   .   .   Child: 1  Const 220 : type int [line: 35]
.   .   Sibling: 5  Assign = : type int [line: 36]
.   .   .   Child: 0  Op [ : type int [line: 36]
.   .   .   .   Child: 0  Id bb: array of type int [mem: Local  size: 12  loc: -6] [line: 36]
.   .   .   .   Child: 1  Const 10 : type int [line: 36]
.   .   .   Child: 1  Const 222 : type int [line: 36]
.   .   Sibling: 6  Call fox: type void [line: 38]
.   .   .   Child: 0  Id a: type int [mem: Global  size: 1  loc: 0] [line: 38]
.   .   .   Sibling: 1  Id aa: array of type int [mem: Global  size: 12  loc: -2] [line: 38]
.   .   Sibling: 7  Call fox: type void [line: 39]
.   .   .   Child: 0  Id b: type int [mem: Local  size: 1  loc: -4] [line: 39]
.   .   .   Sibling: 1  Id bb: array of type int [mem: Local  size: 12  loc: -6] [line: 39]
.   .   Sibling: 8  Compound [line: 41]
.   .   .   Child: 0  Var c: type int [mem: Local  size: 1  loc: -17] [line: 42]
.   .   .   Sibling: 1  Var cc: array of type int [mem: Local  size: 12  loc: -19] [line: 43]
.   .   .   Child: 1  Assign = : type int [line: 45]
.   .   .   .   Child: 0  Id c: type int [mem: Local  size: 1  loc: -17] [line: 45]
.   .   .   .   Child: 1  Const 333 : type int [line: 45]
.   .   .   Sibling: 1  Assign = : type int [line: 46]
.   .   .   .   Child: 0  Op [ : type int [line: 46]
.   .   .   .   .   Child: 0  Id cc: array of type int [mem: Local  size: 12  loc: -19] [line: 46]
.   .   .   .   .   Child: 1  Const 0 : type int [line: 46]
.   .   .   .   Child: 1  Const 330 : type int [line: 46]
.   .   .   Sibling: 2  Assign = : type int [line: 47]
.   .   .   .   Child: 0  Op [ : type int [line: 47]
.   .   .   .   .   Child: 0  Id cc: array of type int [mem: Local  size: 12  loc: -19] [line: 47]
.   .   .   .   .   Child: 1  Const 10 : type int [line: 47]
.   .   .   .   Child: 1  Const 334 : type int [line: 47]
.   .   .   Sibling: 3  Call outnl: type void [line: 49]
.   .   .   Sibling: 4  Call fox: type void [line: 50]
.   .   .   .   Child: 0  Id a: type int [mem: Global  size: 1  loc: 0] [line: 50]
.   .   .   .   Sibling: 1  Id aa: array of type int [mem: Global  size: 12  loc: -2] [line: 50]
.   .   .   Sibling: 5  Call fox: type void [line: 51]
.   .   .   .   Child: 0  Id b: type int [mem: Local  size: 1  loc: -4] [line: 51]
.   .   .   .   Sibling: 1  Id bb: array of type int [mem: Local  size: 12  loc: -6] [line: 51]
.   .   .   Sibling: 6  Call fox: type void [line: 52]
.   .   .   .   Child: 0  Id c: type int [mem: Local  size: 1  loc: -17] [line: 52]
.   .   .   .   Sibling: 1  Id cc: array of type int [mem: Local  size: 12  loc: -19] [line: 52]
.   .   Sibling: 9  Compound [line: 54]
.   .   .   Child: 0  Var d: type int [mem: Local  size: 1  loc: -17] [line: 55]
.   .   .   Sibling: 1  Var dd: array of type int [mem: Local  size: 12  loc: -19] [line: 56]
.   .   .   Child: 1  Assign = : type int [line: 58]
.   .   .   .   Child: 0  Id d: type int [mem: Local  size: 1  loc: -17] [line: 58]
.   .   .   .   Child: 1  Const 444 : type int [line: 58]
.   .   .   Sibling: 1  Assign = : type int [line: 59]
.   .   .   .   Child: 0  Op [ : type int [line: 59]
.   .   .   .   .   Child: 0  Id dd: array of type int [mem: Local  size: 12  loc: -19] [line: 59]
.   .   .   .   .   Child: 1  Const 0 : type int [line: 59]
.   .   .   .   Child: 1  Const 440 : type int [line: 59]
.   .   .   Sibling: 2  Assign = : type int [line: 60]
.   .   .   .   Child: 0  Op [ : type int [line: 60]
.   .   .   .   .   Child: 0  Id dd: array of type int [mem: Local  size: 12  loc: -19] [line: 60]
.   .   .   .   .   Child: 1  Const 10 : type int [line: 60]
.   .   .   .   Child: 1  Const 445 : type int [line: 60]
.   .   .   Sibling: 3  Call outnl: type void [line: 62]
.   .   .   Sibling: 4  Call fox: type void [line: 63]
.   .   .   .   Child: 0  Id a: type int [mem: Global  size: 1  loc: 0] [line: 63]
.   .   .   .   Sibling: 1  Id aa: array of type int [mem: Global  size: 12  loc: -2] [line: 63]
.   .   .   Sibling: 5  Call fox: type void [line: 64]
.   .   .   .   Child: 0  Id b: type int [mem: Local  size: 1  loc: -4] [line: 64]
.   .   .   .   Sibling: 1  Id bb: array of type int [mem: Local  size: 12  loc: -6] [line: 64]
.   .   .   Sibling: 6  Call fox: type void [line: 65]
.   .   .   .   Child: 0  Id d: type int [mem: Local  size: 1  loc: -17] [line: 65]
.   .   .   .   Sibling: 1  Id dd: array of type int [mem: Local  size: 12  loc: -19] [line: 65]
.   .   .   Sibling: 7  Call outnl: type void [line: 67]
.   .   .   Sibling: 8  Call bat: type void [line: 68]
.   .   .   .   Child: 0  Id a: type int [mem: Global  size: 1  loc: 0] [line: 68]
.   .   .   .   Sibling: 1  Id aa: array of type int [mem: Global  size: 12  loc: -2] [line: 68]
.   .   .   Sibling: 9  Call bat: type void [line: 69]
.   .   .   .   Child: 0  Id b: type int [mem: Local  size: 1  loc: -4] [line: 69]
.   .   .   .   Sibling: 1  Id bb: array of type int [mem: Local  size: 12  loc: -6] [line: 69]
.   .   .   Sibling: 10  Call bat: type void [line: 70]
.   .   .   .   Child: 0  Id d: type int [mem: Local  size: 1  loc: -17] [line: 70]
.   .   .   .   Sibling: 1  Id dd: array of type int [mem: Local  size: 12  loc: -19] [line: 70]
.   .   Sibling: 10  Compound [line: 72]
.   .   .   Child: 0  Var e: static type int [mem: Static  size: 1  loc: -13] [line: 73]
.   .   .   Sibling: 1  Var ee: static array of type int [mem: Static  size: 12  loc: -15] [line: 74]
.   .   .   Child: 1  Assign = : type int [line: 76]
.   .   .   .   Child: 0  Id e: static type int [mem: Static  size: 1  loc: -13] [line: 76]
.   .   .   .   Child: 1  Const 555 : type int [line: 76]
.   .   .   Sibling: 1  Assign = : type int [line: 77]
.   .   .   .   Child: 0  Op [ : type int [line: 77]
.   .   .   .   .   Child: 0  Id ee: static array of type int [mem: Static  size: 12  loc: -15] [line: 77]
.   .   .   .   .   Child: 1  Const 0 : type int [line: 77]
.   .   .   .   Child: 1  Const 550 : type int [line: 77]
.   .   .   Sibling: 2  Assign = : type int [line: 78]
.   .   .   .   Child: 0  Op [ : type int [line: 78]
.   .   .   .   .   Child: 0  Id ee: static array of type int [mem: Static  size: 12  loc: -15] [line: 78]
.   .   .   .   .   Child: 1  Const 10 : type int [line: 78]
.   .   .   .   Child: 1  Const 556 : type int [line: 78]
.   .   .   Sibling: 3  Call outnl: type void [line: 80]
.   .   .   Sibling: 4  Call fox: type void [line: 81]
.   .   .   .   Child: 0  Id a: type int [mem: Global  size: 1  loc: 0] [line: 81]
.   .   .   .   Sibling: 1  Id aa: array of type int [mem: Global  size: 12  loc: -2] [line: 81]
.   .   .   Sibling: 5  Call fox: type void [line: 82]
.   .   .   .   Child: 0  Id b: type int [mem: Local  size: 1  loc: -4] [line: 82]
.   .   .   .   Sibling: 1  Id bb: array of type int [mem: Local  size: 12  loc: -6] [line: 82]
.   .   .   Sibling: 6  Call fox: type void [line: 83]
.   .   .   .   Child: 0  Id e: static type int [mem: Static  size: 1  loc: -13] [line: 83]
.   .   .   .   Sibling: 1  Id ee: static array of type int [mem: Static  size: 12  loc: -15] [line: 83]
.   .   .   Sibling: 7  Call outnl: type void [line: 85]
.   .   .   Sibling: 8  Call bat: type void [line: 86]
.   .   .   .   Child: 0  Id a: type int [mem: Global  size: 1  loc: 0] [line: 86]
.   .   .   .   Sibling: 1  Id aa: array of type int [mem: Global  size: 12  loc: -2] [line: 86]
.   .   .   Sibling: 9  Call bat: type void [line: 87]
.   .   .   .   Child: 0  Id b: type int [mem: Local  size: 1  loc: -4] [line: 87]
.   .   .   .   Sibling: 1  Id bb: array of type int [mem: Local  size: 12  loc: -6] [line: 87]
.   .   .   Sibling: 10  Call bat: type void [line: 88]
.   .   .   .   Child: 0  Id e: static type int [mem: Static  size: 1  loc: -13] [line: 88]
.   .   .   .   Sibling: 1  Id ee: static array of type int [mem: Static  size: 12  loc: -15] [line: 88]
.   .   Sibling: 11  Call outnl: type void [line: 91]
.   .   Sibling: 12  Call output: type void [line: 92]
.   .   .   Child: 0  Call th: type int [line: 92]
.   .   .   .   Child: 0  Id a: type int [mem: Global  size: 1  loc: 0] [line: 92]
.   .   Sibling: 13  Call output: type void [line: 93]
.   .   .   Child: 0  Call tha: type int [line: 93]
.   .   .   .   Child: 0  Id aa: array of type int [mem: Global  size: 12  loc: -2] [line: 93]
.   .   Sibling: 14  Call outnl: type void [line: 94]
.   .   Sibling: 15  Call bat: type void [line: 95]
.   .   .   Child: 0  Call th: type int [line: 95]
.   .   .   .   Child: 0  Id a: type int [mem: Global  size: 1  loc: 0] [line: 95]
.   .   .   Sibling: 1  Id aa: array of type int [mem: Global  size: 12  loc: -2] [line: 95]
.   .   Sibling: 16  Call outnl: type void [line: 96]
Number of warnings: 2
Number of errors: 0
