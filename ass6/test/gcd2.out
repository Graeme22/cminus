====================================
RUN: gcd2.c-
Func gcd: returns type int [line: 4]
.   Child: 0  Param u: type int [mem: Param  size: 1  loc: -2] [line: 4]
.   Sibling: 1  Param v: type int [mem: Param  size: 1  loc: -3] [line: 4]
.   Child: 1  Compound [line: 5]
.   .   Child: 1  If [line: 6]
.   .   .   Child: 0  Op == : type bool [line: 6]
.   .   .   .   Child: 0  Id v: type int [mem: Param  size: 1  loc: -3] [line: 6]
.   .   .   .   Child: 1  Const 0 : type int [line: 6]
.   .   .   Child: 1  Return [line: 7]
.   .   .   .   Child: 0  Id u: type int [mem: Param  size: 1  loc: -2] [line: 7]
.   .   .   Child: 2  Return [line: 9]
.   .   .   .   Child: 0  Call gcd: type int [line: 9]
.   .   .   .   .   Child: 0  Id v: type int [mem: Param  size: 1  loc: -3] [line: 9]
.   .   .   .   .   Sibling: 1  Op - : type int [line: 9]
.   .   .   .   .   .   Child: 0  Id u: type int [mem: Param  size: 1  loc: -2] [line: 9]
.   .   .   .   .   .   Child: 1  Op * : type int [line: 9]
.   .   .   .   .   .   .   Child: 0  Op / : type int [line: 9]
.   .   .   .   .   .   .   .   Child: 0  Id u: type int [mem: Param  size: 1  loc: -2] [line: 9]
.   .   .   .   .   .   .   .   Child: 1  Id v: type int [mem: Param  size: 1  loc: -3] [line: 9]
.   .   .   .   .   .   .   Child: 1  Id v: type int [mem: Param  size: 1  loc: -3] [line: 9]
Sibling: 1  Func main: returns type void [line: 12]
.   Child: 1  Compound [line: 13]
.   .   Child: 1  Call output: type void [line: 14]
.   .   .   Child: 0  Call gcd: type int [line: 14]
.   .   .   .   Child: 0  Call input: type int [line: 14]
.   .   .   .   Sibling: 1  Call input: type int [line: 14]
.   .   Sibling: 1  Call outnl: type void [line: 15]
Number of warnings: 0
Number of errors: 0
