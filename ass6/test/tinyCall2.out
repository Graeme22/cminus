====================================
RUN: tinyCall2.c-
Func three: returns type void [line: 2]
.   Child: 0  Param z: array of type int [mem: Param  size: 1  loc: -2] [line: 2]
.   Child: 1  Compound [line: 2]
.   .   Child: 1  Call output: type void [line: 3]
.   .   .   Child: 0  Op [ : type int [line: 3]
.   .   .   .   Child: 0  Id z: array of type int [mem: Param  size: 1  loc: -2] [line: 3]
.   .   .   .   Child: 1  Const 7 : type int [line: 3]
.   .   Sibling: 1  Assign = : type int [line: 4]
.   .   .   Child: 0  Op [ : type int [line: 4]
.   .   .   .   Child: 0  Id z: array of type int [mem: Param  size: 1  loc: -2] [line: 4]
.   .   .   .   Child: 1  Const 7 : type int [line: 4]
.   .   .   Child: 1  Const 666 : type int [line: 4]
.   .   Sibling: 2  Call outnl: type void [line: 5]
Sibling: 1  Func two: returns type void [line: 9]
.   Child: 0  Param y: array of type int [mem: Param  size: 1  loc: -2] [line: 9]
.   Child: 1  Compound [line: 9]
.   .   Child: 1  Call output: type void [line: 10]
.   .   .   Child: 0  Op [ : type int [line: 10]
.   .   .   .   Child: 0  Id y: array of type int [mem: Param  size: 1  loc: -2] [line: 10]
.   .   .   .   Child: 1  Const 7 : type int [line: 10]
.   .   Sibling: 1  Call three: type void [line: 11]
.   .   .   Child: 0  Id y: array of type int [mem: Param  size: 1  loc: -2] [line: 11]
.   .   Sibling: 2  Call output: type void [line: 12]
.   .   .   Child: 0  Op [ : type int [line: 12]
.   .   .   .   Child: 0  Id y: array of type int [mem: Param  size: 1  loc: -2] [line: 12]
.   .   .   .   Child: 1  Const 7 : type int [line: 12]
Sibling: 2  Func one: returns type void [line: 16]
.   Child: 0  Param x: array of type int [mem: Param  size: 1  loc: -2] [line: 16]
.   Child: 1  Compound [line: 16]
.   .   Child: 1  Call output: type void [line: 17]
.   .   .   Child: 0  Op [ : type int [line: 17]
.   .   .   .   Child: 0  Id x: array of type int [mem: Param  size: 1  loc: -2] [line: 17]
.   .   .   .   Child: 1  Const 7 : type int [line: 17]
.   .   Sibling: 1  Call two: type void [line: 18]
.   .   .   Child: 0  Id x: array of type int [mem: Param  size: 1  loc: -2] [line: 18]
.   .   Sibling: 2  Call output: type void [line: 19]
.   .   .   Child: 0  Op [ : type int [line: 19]
.   .   .   .   Child: 0  Id x: array of type int [mem: Param  size: 1  loc: -2] [line: 19]
.   .   .   .   Child: 1  Const 7 : type int [line: 19]
Sibling: 3  Func main: returns type void [line: 23]
.   Child: 1  Compound [line: 24]
.   .   Child: 0  Var w: array of type int [mem: Local  size: 11  loc: -3] [line: 25]
.   .   Child: 1  Assign = : type int [line: 27]
.   .   .   Child: 0  Op [ : type int [line: 27]
.   .   .   .   Child: 0  Id w: array of type int [mem: Local  size: 11  loc: -3] [line: 27]
.   .   .   .   Child: 1  Const 7 : type int [line: 27]
.   .   .   Child: 1  Const 42 : type int [line: 27]
.   .   Sibling: 1  Call one: type void [line: 28]
.   .   .   Child: 0  Id w: array of type int [mem: Local  size: 11  loc: -3] [line: 28]
.   .   Sibling: 2  Call output: type void [line: 29]
.   .   .   Child: 0  Op [ : type int [line: 29]
.   .   .   .   Child: 0  Id w: array of type int [mem: Local  size: 11  loc: -3] [line: 29]
.   .   .   .   Child: 1  Const 7 : type int [line: 29]
.   .   Sibling: 3  Call outnl: type void [line: 30]
Number of warnings: 0
Number of errors: 0
