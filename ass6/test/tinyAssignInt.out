====================================
RUN: tinyAssignInt.c-
WARNING(33): Variable zx may be uninitialized when used here.
WARNING(33): Variable zy may be uninitialized when used here.
Var gx: type int [mem: Global  size: 1  loc: 0] [line: 2]
Sibling: 1  Var gy: array of type int [mem: Global  size: 11  loc: -2] [line: 2]
Sibling: 2  Func esperanza: returns type void [line: 4]
.   Child: 0  Param px: type int [mem: Param  size: 1  loc: -2] [line: 4]
.   Sibling: 1  Param py: array of type int [mem: Param  size: 1  loc: -3] [line: 4]
.   Child: 1  Compound [line: 5]
.   .   Child: 0  Var x: type int [mem: Local  size: 1  loc: -4] [line: 6]
.   .   Sibling: 1  Var y: array of type int [mem: Local  size: 11  loc: -6] [line: 6]
.   .   Sibling: 2  Var sx: static type int [mem: Static  size: 1  loc: -12] [line: 7]
.   .   Sibling: 3  Var sy: static array of type int [mem: Static  size: 11  loc: -14] [line: 7]
.   .   Child: 1  Assign = : type int [line: 9]
.   .   .   Child: 0  Id gx: type int [mem: Global  size: 1  loc: 0] [line: 9]
.   .   .   Child: 1  Const 111 : type int [line: 9]
.   .   Sibling: 1  Call output: type void [line: 10]
.   .   .   Child: 0  Id gx: type int [mem: Global  size: 1  loc: 0] [line: 10]
.   .   Sibling: 2  Assign = : type int [line: 11]
.   .   .   Child: 0  Op [ : type int [line: 11]
.   .   .   .   Child: 0  Id gy: array of type int [mem: Global  size: 11  loc: -2] [line: 11]
.   .   .   .   Child: 1  Const 9 : type int [line: 11]
.   .   .   Child: 1  Const 222 : type int [line: 11]
.   .   Sibling: 3  Call output: type void [line: 12]
.   .   .   Child: 0  Op [ : type int [line: 12]
.   .   .   .   Child: 0  Id gy: array of type int [mem: Global  size: 11  loc: -2] [line: 12]
.   .   .   .   Child: 1  Const 9 : type int [line: 12]
.   .   Sibling: 4  Assign = : type int [line: 13]
.   .   .   Child: 0  Id x: type int [mem: Local  size: 1  loc: -4] [line: 13]
.   .   .   Child: 1  Const 333 : type int [line: 13]
.   .   Sibling: 5  Call output: type void [line: 14]
.   .   .   Child: 0  Id x: type int [mem: Local  size: 1  loc: -4] [line: 14]
.   .   Sibling: 6  Assign = : type int [line: 15]
.   .   .   Child: 0  Op [ : type int [line: 15]
.   .   .   .   Child: 0  Id y: array of type int [mem: Local  size: 11  loc: -6] [line: 15]
.   .   .   .   Child: 1  Const 9 : type int [line: 15]
.   .   .   Child: 1  Const 444 : type int [line: 15]
.   .   Sibling: 7  Call output: type void [line: 16]
.   .   .   Child: 0  Op [ : type int [line: 16]
.   .   .   .   Child: 0  Id y: array of type int [mem: Local  size: 11  loc: -6] [line: 16]
.   .   .   .   Child: 1  Const 9 : type int [line: 16]
.   .   Sibling: 8  Call outnl: type void [line: 17]
.   .   Sibling: 9  Assign = : type int [line: 18]
.   .   .   Child: 0  Id px: type int [mem: Param  size: 1  loc: -2] [line: 18]
.   .   .   Child: 1  Const 555 : type int [line: 18]
.   .   Sibling: 10  Call output: type void [line: 19]
.   .   .   Child: 0  Id px: type int [mem: Param  size: 1  loc: -2] [line: 19]
.   .   Sibling: 11  Assign = : type int [line: 20]
.   .   .   Child: 0  Op [ : type int [line: 20]
.   .   .   .   Child: 0  Id py: array of type int [mem: Param  size: 1  loc: -3] [line: 20]
.   .   .   .   Child: 1  Const 9 : type int [line: 20]
.   .   .   Child: 1  Const 666 : type int [line: 20]
.   .   Sibling: 12  Call output: type void [line: 21]
.   .   .   Child: 0  Op [ : type int [line: 21]
.   .   .   .   Child: 0  Id py: array of type int [mem: Param  size: 1  loc: -3] [line: 21]
.   .   .   .   Child: 1  Const 9 : type int [line: 21]
.   .   Sibling: 13  Assign = : type int [line: 22]
.   .   .   Child: 0  Id sx: static type int [mem: Static  size: 1  loc: -12] [line: 22]
.   .   .   Child: 1  Const 777 : type int [line: 22]
.   .   Sibling: 14  Call output: type void [line: 23]
.   .   .   Child: 0  Id sx: static type int [mem: Static  size: 1  loc: -12] [line: 23]
.   .   Sibling: 15  Assign = : type int [line: 24]
.   .   .   Child: 0  Op [ : type int [line: 24]
.   .   .   .   Child: 0  Id sy: static array of type int [mem: Static  size: 11  loc: -14] [line: 24]
.   .   .   .   Child: 1  Const 9 : type int [line: 24]
.   .   .   Child: 1  Const 888 : type int [line: 24]
.   .   Sibling: 16  Call output: type void [line: 25]
.   .   .   Child: 0  Op [ : type int [line: 25]
.   .   .   .   Child: 0  Id sy: static array of type int [mem: Static  size: 11  loc: -14] [line: 25]
.   .   .   .   Child: 1  Const 9 : type int [line: 25]
.   .   Sibling: 17  Call outnl: type void [line: 26]
Sibling: 3  Func main: returns type void [line: 30]
.   Child: 1  Compound [line: 31]
.   .   Child: 0  Var zx: type int [mem: Local  size: 1  loc: -2] [line: 32]
.   .   Sibling: 1  Var zy: array of type int [mem: Local  size: 11  loc: -4] [line: 32]
.   .   Child: 1  Call esperanza: type void [line: 33]
.   .   .   Child: 0  Id zx: type int [mem: Local  size: 1  loc: -2] [line: 33]
.   .   .   Sibling: 1  Id zy: array of type int [mem: Local  size: 11  loc: -4] [line: 33]
Number of warnings: 2
Number of errors: 0
